[
  {
    "objectID": "synthetic-data-exercise/synthetic-data.html",
    "href": "synthetic-data-exercise/synthetic-data.html",
    "title": "Synthetic Data Exercise",
    "section": "",
    "text": "Create a synthetic dataset for a clinical trial assessing second-line immune checkpoint inhibitor therapy (pembrolizumab) in the treatment of advanced urothelial carcinoma.\nData was taken from a randomized controlled trial (RCT) by Bellmunt et al., 2017.\nThe data summary used to generate the synthetic data is as follows: Pembrolizumab group: Age (mean) in years = 67 Male sex = 74.1% Current or former smoker = 61.3% Site of primary tumor in bladder or urethra = 85.9% Median overall survival = 10.3 months Median progression free survival = 2.1 months Adverse event leading to discontinuation = 5.6%\nChemotherapy group: Age (mean) in years = 68 Male sex = 74.3% Current or former smoker = 69.1% Site of primary tumor in bladder or urethra = 86.3% Median overall survival = 7.4 months Median progression free survival = 3.3 months Adverse event leading to discontinuation = 11%\nCreate synthetic data using this data:\n\n# Set random seed for reproducibility\nset.seed(123)\n\n# Function to simulate survival times\nsimulate_survival &lt;- function(n, median_survival) {\n  lambda &lt;- log(2) / median_survival\n  rexp(n, rate = lambda)\n}\n\n# Number of synthetic data points for each group\nn_pembrolizumab &lt;- 1000\nn_chemotherapy &lt;- 1000\n\n# Pembrolizumab group\npembrolizumab_data &lt;- data.frame(\n  Group = \"Pembrolizumab\",\n  Age = rnorm(n_pembrolizumab, mean = 67, sd = 10),\n  Male = rbinom(n_pembrolizumab, 1, 0.741),\n  Smoker = rbinom(n_pembrolizumab, 1, 0.613),\n  Primary_Tumor_Bladder_Urethra = rbinom(n_pembrolizumab, 1, 0.859),\n  Overall_Survival = simulate_survival(n_pembrolizumab, 10.3),\n  Progression_Free_Survival = simulate_survival(n_pembrolizumab, 2.1),\n  Adverse_Event_Discontinuation = rbinom(n_pembrolizumab, 1, 0.056)\n)\n\n# Chemotherapy group\nchemotherapy_data &lt;- data.frame(\n  Group = \"Chemotherapy\",\n  Age = rnorm(n_chemotherapy, mean = 68, sd = 10),\n  Male = rbinom(n_chemotherapy, 1, 0.743),\n  Smoker = rbinom(n_chemotherapy, 1, 0.691),\n  Primary_Tumor_Bladder_Urethra = rbinom(n_chemotherapy, 1, 0.863),\n  Overall_Survival = simulate_survival(n_chemotherapy, 7.4),\n  Progression_Free_Survival = simulate_survival(n_chemotherapy, 3.3),\n  Adverse_Event_Discontinuation = rbinom(n_chemotherapy, 1, 0.11)\n)\n\n# Combine the two groups\nsynthetic_data &lt;- rbind(pembrolizumab_data, chemotherapy_data)\n\n# View summary of the synthetic data\nsummary(synthetic_data)\n\n    Group                Age             Male            Smoker      \n Length:2000        Min.   :35.38   Min.   :0.0000   Min.   :0.0000  \n Class :character   1st Qu.:60.99   1st Qu.:0.0000   1st Qu.:0.0000  \n Mode  :character   Median :67.54   Median :1.0000   Median :1.0000  \n                    Mean   :67.56   Mean   :0.7345   Mean   :0.6465  \n                    3rd Qu.:74.15   3rd Qu.:1.0000   3rd Qu.:1.0000  \n                    Max.   :99.41   Max.   :1.0000   Max.   :1.0000  \n Primary_Tumor_Bladder_Urethra Overall_Survival    Progression_Free_Survival\n Min.   :0.000                 Min.   :  0.00824   Min.   : 0.00161         \n 1st Qu.:1.000                 1st Qu.:  3.74832   1st Qu.: 1.14902         \n Median :1.000                 Median :  8.68409   Median : 2.63594         \n Mean   :0.878                 Mean   : 12.46450   Mean   : 3.99462         \n 3rd Qu.:1.000                 3rd Qu.: 17.38994   3rd Qu.: 5.47302         \n Max.   :1.000                 Max.   :102.73911   Max.   :40.88991         \n Adverse_Event_Discontinuation\n Min.   :0.000                \n 1st Qu.:0.000                \n Median :0.000                \n Mean   :0.066                \n 3rd Qu.:0.000                \n Max.   :1.000                \n\n\nNow create plot to look at overall survival vs group\n\nlibrary(ggplot2)\nggplot(synthetic_data, mapping=aes(x=Group, y=Overall_Survival)) + geom_point()\n\n\n\n\n\n\n\n\nAs expected, the overall survival is greater in pembrolizumab group than in chemotherapy group.\nNow a plot to look at progression free survival vs group\n\nggplot(synthetic_data, mapping=aes(x=Group, y=Progression_Free_Survival)) + geom_point()\n\n\n\n\n\n\n\n\nAs expected, progression free survival is greater in chemotherapy group.\nNow fit a model to predict overall survival based on age, sex, smoking status, site of primary tumor, group, and adverse events\n\nsurvival_fit &lt;- lm(\n  Overall_Survival ~ Group + Age + as.factor(Male) + \n    as.factor(Smoker) + as.factor(Primary_Tumor_Bladder_Urethra) + \n    as.factor(Adverse_Event_Discontinuation),\n  data = synthetic_data\n)\n\nsummary(survival_fit)\n\n\nCall:\nlm(formula = Overall_Survival ~ Group + Age + as.factor(Male) + \n    as.factor(Smoker) + as.factor(Primary_Tumor_Bladder_Urethra) + \n    as.factor(Adverse_Event_Discontinuation), data = synthetic_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-14.980  -8.637  -3.277   5.000  88.304 \n\nCoefficients:\n                                          Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)                               12.31927    2.11503   5.825 6.66e-09\nGroupPembrolizumab                         3.38826    0.54895   6.172 8.13e-10\nAge                                       -0.03383    0.02748  -1.231    0.218\nas.factor(Male)1                           0.48821    0.61592   0.793    0.428\nas.factor(Smoker)1                        -0.75598    0.57109  -1.324    0.186\nas.factor(Primary_Tumor_Bladder_Urethra)1  0.96650    0.83184   1.162    0.245\nas.factor(Adverse_Event_Discontinuation)1  0.27931    1.10186   0.253    0.800\n                                             \n(Intercept)                               ***\nGroupPembrolizumab                        ***\nAge                                          \nas.factor(Male)1                             \nas.factor(Smoker)1                           \nas.factor(Primary_Tumor_Bladder_Urethra)1    \nas.factor(Adverse_Event_Discontinuation)1    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.16 on 1993 degrees of freedom\nMultiple R-squared:  0.02259,   Adjusted R-squared:  0.01965 \nF-statistic: 7.678 on 6 and 1993 DF,  p-value: 3.575e-08\n\n\nWe can see that overall survival depends on the treatment group and age, but not on other factors such as sex, smoking status, site of primary tumor, and adverse events. The R-squared is 0.02259, suggesting that there are other factors that may influence overall survival."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\nWarning: package 'here' was built under R version 4.4.2"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#mohammed-zuber-contributed-to-this-exercise.",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#mohammed-zuber-contributed-to-this-exercise.",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 Mohammed Zuber contributed to this exercise.",
    "text": "2.1 Mohammed Zuber contributed to this exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 General Background Information",
    "text": "2.2 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Description of data and data source",
    "text": "2.3 Description of data and data source\nThe data set contains information regarding height, weight, and gender of 14 individuals. I have added the following two columns - Number of siblings, and Race. The number of siblings are reported as an integer number &gt;= 0. The Race variable has the following categories: White, Black, Hispanic, Asian, and Other. White and Black categories refer to Non-Hispanic White and Black individuals respectively. Hispanic category includes Hispanic and Latino individuals. Asian includes South and East Asian individuals. Those other than these are classified as Other. This variable s assumed to have self-reported information."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.4 Questions/Hypotheses to be addressed",
    "text": "2.4 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nRace\n0\n1\n5\n8\n0\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.976545\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.245261\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nNumberofsiblings\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n2.00000\n1.224745\n0\n1\n2\n3\n4\n▂▅▇▅▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\nFigure 2 shows the figure for Height vs Race\n\n\n\n\n\n\n\n\nFigure 2: Height vs Race\n\n\n\n\n\nFigure 3 shows the figure for Number of Siblings vs Weight\n\n\n\n\n\n\n\n\nFigure 3: Number of siblings vs Weight"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n\nTable 3 shows a summary of linear model predicting height using number of siblings and race.\n\n\n\n\nTable 3: Linear model fit table 2.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n176.2941176\n20.241449\n8.7095601\n0.0031860\n\n\nNumberofsiblings\n1.7058824\n6.567193\n0.2597582\n0.8118568\n\n\nRaceBlack\n-21.7058824\n23.063225\n-0.9411469\n0.4160606\n\n\nRaceHispanic\n-26.4117647\n26.877397\n-0.9826757\n0.3982280\n\n\nRaceOther\n-4.3529412\n23.678352\n-0.1838363\n0.8658657\n\n\nRaceWhite\n0.2941176\n27.862241\n0.0105561\n0.9922403"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.4.2\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name`    `Variable Definition`                      `Allowed Values`\n  &lt;chr&gt;              &lt;chr&gt;                                      &lt;chr&gt;           \n1 Height             height in centimeters                      numeric value &gt;…\n2 Weight             weight in kilograms                        numeric value &gt;…\n3 Gender             identified gender (male/female/other)      M/F/O/NA        \n4 Number of siblings Integer number for number of siblings      numeric value &gt;…\n5 Race               Self-identification of race: White and Bl… White/Black/His…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height               &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", …\n$ Weight               &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45…\n$ Gender               &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\"…\n$ `Number of siblings` &lt;dbl&gt; 2, 3, 4, 1, 2, 0, 2, 3, 1, 3, 3, 1, 2, 4\n$ Race                 &lt;chr&gt; \"White\", \"Black\", \"Hispanic\", \"Asian\", \"Asian\", \"…\n\nsummary(rawdata)\n\n    Height              Weight          Gender          Number of siblings\n Length:14          Min.   :  45.0   Length:14          Min.   :0.000     \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:1.250     \n Mode  :character   Median :  70.0   Mode  :character   Median :2.000     \n                    Mean   : 602.7                      Mean   :2.214     \n                    3rd Qu.:  90.0                      3rd Qu.:3.000     \n                    Max.   :7000.0                      Max.   :4.000     \n                    NA's   :1                                             \n     Race          \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender `Number of siblings` Race    \n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;   \n1 180        80 M                         2 White   \n2 175        70 O                         3 Black   \n3 sixty      60 F                         4 Hispanic\n4 178        76 F                         1 Asian   \n5 192        90 NA                        2 Asian   \n6 6          55 F                         0 Other   \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70\n90\n7000\n▇▁▁▁▁\n\n\nNumber of siblings\n0\n1.00\n2.21\n1.19\n0\n1.25\n2\n3\n4\n▂▆▇▇▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nNumber of siblings\n0\n1.00\n2.08\n1.12\n0\n1.00\n2\n3\n4\n▂▆▇▇▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nNumber of siblings\n0\n1.00\n2.08\n1.12\n0\n1.00\n2\n3\n4\n▂▆▇▇▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nNumber of siblings\n0\n1\n1.91\n1.14\n0\n1.0\n2\n2.5\n4\n▂▆▇▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nNumber of siblings\n0\n1\n1.91\n1.14\n0\n1.0\n2\n2.5\n4\n▂▆▇▃▂\n\n\n\n\n\n\nd3 &lt;- d3 %&gt;%\n  rename(Numberofsiblings = \"Number of siblings\")\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nNumberofsiblings\n0\n1\n1.91\n1.14\n0\n1.0\n2\n2.5\n4\n▂▆▇▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nNumberofsiblings\n0\n1\n2.00\n1.22\n0\n1\n2\n3\n4\n▂▅▇▅▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda - Copy.html",
    "href": "starter-analysis-exercise/code/eda-code/eda - Copy.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.4.2\n\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Race                  0             1   5   8     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable    n_missing complete_rate  mean    sd  p0 p25 p50 p75 p100\n1 Height                   0             1 166.  16.0  133 156 166 178  183\n2 Weight                   0             1  70.1 21.2   45  55  70  80  110\n3 Numberofsiblings         0             1   2    1.22   0   1   2   3    4\n  hist \n1 ▂▁▃▃▇\n2 ▇▂▃▂▂\n3 ▂▅▇▅▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\np5 &lt;- mydata %&gt;% ggplot(aes(x = Race, y = Height, fill = Race)) +\n  geom_boxplot() +\n  labs(x = \"Race\", y = \"Height\", title = \"Boxplot of Height and Race\") +\n  theme_minimal()\n\nboxplot_file &lt;- here(\"starter-analysis-exercise\", \"results\", \"figures\", \"height and Race boxplot 2.png\")\nggsave(filename = boxplot_file, plot = p5)\n\nSaving 7 x 5 in image\n\nplot(p5)\n\n\n\n\n\n\n\n\n\np6 &lt;- mydata %&gt;% ggplot(aes(x = Weight, y = Numberofsiblings)) +\n  geom_point(color = \"cyan\", size = 3, alpha = 0.7) +\n  labs(x = \"Weight\", y = \"Numberofsiblings\", title = \"Scatterplot ofNumber of siblings vs Weight\") +\n  theme_minimal()\n\nscatterplot_file &lt;- here(\"starter-analysis-exercise\", \"results\", \"figures\", \"weight-siblings-scatterplot2.png\")\nggsave(filename = scatterplot_file, plot = p6)\n\nSaving 7 x 5 in image\n\nplot(p6)\n\n\n\n\n\n\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "presentation-exercise",
    "section": "",
    "text": "The data I chose was from 538 where they assessed how Americans approved of Biden’s response to COVID-19.\nFirst, let’s load the data.\n\nlibrary(here)\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(plotly)\n\nWarning: package 'plotly' was built under R version 4.4.2\n\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nplot_data = read.csv(here(\"presentation-exercise\", \"covid_approval_polls.csv\"))\nglimpse(plot_data)\n\nRows: 3,867\nColumns: 13\n$ start_date  &lt;chr&gt; \"2020-02-02\", \"2020-02-02\", \"2020-02-02\", \"2020-02-02\", \"2…\n$ end_date    &lt;chr&gt; \"2020-02-04\", \"2020-02-04\", \"2020-02-04\", \"2020-02-04\", \"2…\n$ pollster    &lt;chr&gt; \"YouGov\", \"YouGov\", \"YouGov\", \"YouGov\", \"Morning Consult\",…\n$ sponsor     &lt;chr&gt; \"Economist\", \"Economist\", \"Economist\", \"Economist\", \"\", \"\"…\n$ sample_size &lt;dbl&gt; 1500, 376, 523, 599, 2200, 684, 817, 700, 1996, 700, 788, …\n$ population  &lt;chr&gt; \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"a\", \"rv\", \"rv\", \"rv\", …\n$ party       &lt;chr&gt; \"all\", \"R\", \"D\", \"I\", \"all\", \"R\", \"D\", \"I\", \"all\", \"R\", \"D…\n$ subject     &lt;chr&gt; \"Trump\", \"Trump\", \"Trump\", \"Trump\", \"Trump\", \"Trump\", \"Tru…\n$ tracking    &lt;chr&gt; \"FALSE\", \"FALSE\", \"FALSE\", \"FALSE\", \"FALSE\", \"FALSE\", \"FAL…\n$ text        &lt;chr&gt; \"Do you approve or disapprove of Donald Trump’s handling o…\n$ approve     &lt;dbl&gt; 42, 75, 21, 39, 57, 88, 37, 50, 39, 71, 15, 34, 39, 74, 19…\n$ disapprove  &lt;dbl&gt; 29, 6, 51, 25, 22, 4, 37, 22, 35, 8, 60, 33, 28, 7, 50, 25…\n$ url         &lt;chr&gt; \"https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/doc…\n\nstr(plot_data)\n\n'data.frame':   3867 obs. of  13 variables:\n $ start_date : chr  \"2020-02-02\" \"2020-02-02\" \"2020-02-02\" \"2020-02-02\" ...\n $ end_date   : chr  \"2020-02-04\" \"2020-02-04\" \"2020-02-04\" \"2020-02-04\" ...\n $ pollster   : chr  \"YouGov\" \"YouGov\" \"YouGov\" \"YouGov\" ...\n $ sponsor    : chr  \"Economist\" \"Economist\" \"Economist\" \"Economist\" ...\n $ sample_size: num  1500 376 523 599 2200 ...\n $ population : chr  \"a\" \"a\" \"a\" \"a\" ...\n $ party      : chr  \"all\" \"R\" \"D\" \"I\" ...\n $ subject    : chr  \"Trump\" \"Trump\" \"Trump\" \"Trump\" ...\n $ tracking   : chr  \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ text       : chr  \"Do you approve or disapprove of Donald Trump’s handling of the coronavirus outbreak?\" \"Do you approve or disapprove of Donald Trump’s handling of the coronavirus outbreak?\" \"Do you approve or disapprove of Donald Trump’s handling of the coronavirus outbreak?\" \"Do you approve or disapprove of Donald Trump’s handling of the coronavirus outbreak?\" ...\n $ approve    : num  42 75 21 39 57 88 37 50 39 71 ...\n $ disapprove : num  29 6 51 25 22 4 37 22 35 8 ...\n $ url        : chr  \"https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/document/73jqd6u5mv/econTabReport.pdf\" \"https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/document/73jqd6u5mv/econTabReport.pdf\" \"https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/document/73jqd6u5mv/econTabReport.pdf\" \"https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/document/73jqd6u5mv/econTabReport.pdf\" ...\n\n\nI used the following AI prompt: I want to create an interactive graph of Americans’ approval or disapproval of Biden’s response to COVID-19. First, I want to filter the data for the adult population and the subject “Biden” and then see trends over time. The approval and disapproval variables are given as percentages.\nThis is the code I received:\n\npoll_data2 &lt;- plot_data[plot_data$population == \"a\" & plot_data$subject == \"Biden\", ]\n\npoll_data2$start_date &lt;- as.Date(poll_data2$start_date)\npoll_data2$end_date &lt;- as.Date(poll_data2$end_date)\n\n# Calculate the midpoint (average) of start_date and end_date\npoll_data2$poll_date &lt;- as.Date((as.numeric(poll_data2$start_date) + as.numeric(poll_data2$end_date)) / 2, origin = \"1970-01-01\")\n\n# Aggregate data by date (average approval and disapproval for each date)\npoll_data_avg &lt;- poll_data2 %&gt;%\n  group_by(poll_date) %&gt;%\n  summarise(approve = mean(approve, na.rm = TRUE),\n            disapprove = mean(disapprove, na.rm = TRUE))\n\n# Apply Lowess smoothing for approval and disapproval\npoll_data_avg$fitted_approve &lt;- stats::lowess(poll_data_avg$poll_date, poll_data_avg$approve, f = 0.05)$y\npoll_data_avg$fitted_disapprove &lt;- stats::lowess(poll_data_avg$poll_date, poll_data_avg$disapprove, f = 0.05)$y\n\n# Create hover text for approval and disapproval percentages\npoll_data_avg &lt;- poll_data_avg %&gt;%\n  mutate(hover_text_approve = paste0(round(approve, 1), \"%\"),\n         hover_text_disapprove = paste0(round(disapprove, 1), \"%\"))\n\n# Identify outliers for approval and disapproval (e.g., residuals &gt; 0.5 SD to highlight)\npoll_data_avg$residuals_approve &lt;- poll_data_avg$approve - mean(poll_data_avg$approve, na.rm = TRUE)\npoll_data_avg$residuals_disapprove &lt;- poll_data_avg$disapprove - mean(poll_data_avg$disapprove, na.rm = TRUE)\n\noutliers_approve &lt;- poll_data_avg %&gt;% \n  filter(abs(residuals_approve) &gt; 0.5 * sd(residuals_approve))\n\noutliers_disapprove &lt;- poll_data_avg %&gt;% \n  filter(abs(residuals_disapprove) &gt; 0.5 * sd(residuals_disapprove))\n\n# Add hover text for outliers as well\noutliers_approve &lt;- outliers_approve %&gt;%\n  mutate(hover_text_approve = paste0(round(approve, 1), \"%\"))\n\noutliers_disapprove &lt;- outliers_disapprove %&gt;%\n  mutate(hover_text_disapprove = paste0(round(disapprove, 1), \"%\"))\n\n# Plot\np &lt;- ggplot() +\n  # Smoothed approval line\n  geom_line(data = poll_data_avg, aes(x = poll_date, y = fitted_approve), color = \"orangered\", size = 1) +\n  # Smoothed disapproval line\n  geom_line(data = poll_data_avg, aes(x = poll_date, y = fitted_disapprove), color = \"violet\", size = 1) +\n  # Approval outliers with hover text\n  geom_point(data = outliers_approve, aes(x = poll_date, y = approve, text = hover_text_approve), \n             color = \"orangered\", size = 1, alpha = 0.7) +\n  # Disapproval outliers with hover text\n  geom_point(data = outliers_disapprove, aes(x = poll_date, y = disapprove, text = hover_text_disapprove), \n             color = \"violet\", size = 1, alpha = 0.7) +\n  labs(\n    title = \"Do Americans approve of Biden's response to the coronavirus crisis?\",\n    subtitle = \"A calculation of the share of all Americans who approve of the president’s handling of the coronavirus outbreak\"\n  ) +\n  theme_minimal() +\n  scale_x_date(date_labels = \"%m/%d/%y\", date_breaks = \"3 months\") +\n  scale_y_continuous(limits = c(20, 80), breaks = seq(20, 80, by = 20)) +\n  theme(\n    axis.title.x = element_blank(), # Remove x-axis label\n    axis.title.y = element_blank(), # Remove y-axis label\n    axis.text.x = element_text(size = 12), # Optional: Adjust x-axis text size\n    axis.text.y = element_text(size = 12)  # Optional: Adjust y-axis text size\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in geom_point(data = outliers_approve, aes(x = poll_date, y = approve,\n: Ignoring unknown aesthetics: text\n\n\nWarning in geom_point(data = outliers_disapprove, aes(x = poll_date, y =\ndisapprove, : Ignoring unknown aesthetics: text\n\n# Convert to interactive plot with hover text\ninteractive_plot &lt;- ggplotly(p, tooltip = \"text\")\n\n# Display the interactive plot\ninteractive_plot\n\n\n\n\n\nIt took multiple iterations for me to get the final code. Most of the problems were with the labelling, and how smooth the curve should be.\n\n\n\nThis is the original image\n\n\n\n# Load necessary libraries\nlibrary(dplyr)\nlibrary(DT)\n\nWarning: package 'DT' was built under R version 4.4.2\n\nlibrary(sparkline)\n\nWarning: package 'sparkline' was built under R version 4.4.3\n\nlibrary(htmltools)\n\n# Check column names in plot_data\ncolnames(plot_data)\n\n [1] \"start_date\"  \"end_date\"    \"pollster\"    \"sponsor\"     \"sample_size\"\n [6] \"population\"  \"party\"       \"subject\"     \"tracking\"    \"text\"       \n[11] \"approve\"     \"disapprove\"  \"url\"        \n\n# Convert approve and disapprove columns to numeric (if they aren't already)\nplot_data &lt;- plot_data %&gt;%\n  mutate(\n    approve = as.numeric(approve),\n    disapprove = as.numeric(disapprove)\n  )\n\n# Group and summarize data by population, party, and subject\ngrouped_data &lt;- plot_data %&gt;%\n  group_by(population, party, subject) %&gt;%\n  summarise(\n    mean_approve = mean(approve, na.rm = TRUE),\n    mean_disapprove = mean(disapprove, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\n# Create sparklines for approval trends over time\nsparkline_data &lt;- plot_data %&gt;%\n  group_by(population, party, subject) %&gt;%\n  summarise(\n    sparkline = spk_chr(approve, type = \"line\"),  # Create sparklines for approve column\n    .groups = 'drop'\n  )\n\n# Merge sparkline data with grouped data\ngrouped_data &lt;- grouped_data %&gt;%\n  left_join(sparkline_data, by = c(\"population\", \"party\", \"subject\"))\n\n# Add approval status column\ngrouped_data &lt;- grouped_data %&gt;%\n  mutate(\n    approval_status = ifelse(mean_approve &gt; 50, \"Over half approve\", \"Less than half approve\"),\n    approval_status = paste0(\"&lt;b&gt;\", approval_status, \"&lt;/b&gt;\")  # Bold text\n  )\n\n# Rename columns for better readability\ngrouped_data &lt;- grouped_data %&gt;%\n  rename(\n    \"Population\" = population,\n    \"Party\" = party,\n    \"Subject\" = subject,\n    \"Mean Approval (%)\" = mean_approve,\n    \"Mean Disapproval (%)\" = mean_disapprove,\n    \"Approval Trend\" = sparkline,\n    \"Approval Status\" = approval_status\n  )\n\n# Create interactive table\ninteractive_table &lt;- datatable(\n  grouped_data,\n  escape = FALSE,  # Allow HTML rendering for sparklines and bold text\n  options = list(\n    pageLength = 10,\n    lengthMenu = c(5, 10, 15),\n    searching = TRUE,\n    ordering = TRUE,\n    dom = 'Bfrtip',  # Add buttons for exporting\n    buttons = c('copy', 'csv', 'excel', 'pdf')  # Optional: Add export buttons\n  ),\n  rownames = FALSE,\n  caption = htmltools::tags$caption(\n    style = \"caption-side: top; text-align: center; color: black; font-size: 16px;\",\n    \"Poll Approval Ratings by Population, Party, and Subject\"\n  ),\n  extensions = \"Buttons\"\n) %&gt;%\n  formatStyle(\n    \"Party\",  # Column to apply styling\n    target = \"row\",  # Apply to entire row\n    backgroundColor = styleEqual(\n      c(\"R\", \"D\"),  # Values to match (R = Republican, D = Democrat)\n      c(\"pink\", \"lightblue\")  # Corresponding colors\n    )\n  ) %&gt;%\n  formatStyle(\n    \"Approval Status\",  # Column with approval status\n    fontWeight = \"bold\"  # Make text bold\n  ) %&gt;%\n  spk_add_deps()  # Add sparkline dependencies\n\n# Add a footnote\ninteractive_table &lt;- interactive_table %&gt;%\n  htmltools::tags$div(\n    style = \"font-size: 12px; color: gray; margin-top: 10px;\",\n    \"Footnote: Data represents mean approval and disapproval percentages grouped by population, party, and subject.\"\n  )\n\n# Display the interactive table\ninteractive_table\n\n\n\n\nFootnote: Data represents mean approval and disapproval percentages grouped by population, party, and subject.\n\n\n\nWe can see from the table that regardless of voter status (adults, registered voters, likely voters), over 50% of Republicans approve of Trump’s COVID-19 response, and less than 50% approve of Biden. Similary, over 50% of Democrats approve of Biden while less than 50% approve of Trump."
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html",
    "href": "fitting-exercise/fitting-exercise.html",
    "title": "Fitting Exercise",
    "section": "",
    "text": "Load the data into R\n\nlibrary(here)\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\ndrug_mag = read.csv(here(\"fitting-exercise\", \"Mavoglurant_A2121_nmpk.csv\"))\nhead(drug_mag)\n\n   ID CMT EVID EVI2 MDV  DV  LNDV AMT  TIME DOSE OCC RATE AGE SEX RACE   WT\n1 793   1    1    1   1   0 0.000  25 0.000   25   1   75  42   1    2 94.3\n2 793   2    0    0   0 491 6.196   0 0.200   25   1    0  42   1    2 94.3\n3 793   2    0    0   0 605 6.405   0 0.250   25   1    0  42   1    2 94.3\n4 793   2    0    0   0 556 6.321   0 0.367   25   1    0  42   1    2 94.3\n5 793   2    0    0   0 310 5.737   0 0.533   25   1    0  42   1    2 94.3\n6 793   2    0    0   0 237 5.468   0 0.700   25   1    0  42   1    2 94.3\n        HT\n1 1.769997\n2 1.769997\n3 1.769997\n4 1.769997\n5 1.769997\n6 1.769997\n\n\nPlot the data:\n\nlibrary(ggplot2)\nggplot(drug_mag, aes(x=TIME, y=DV, group=ID, color=DOSE)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"DV over time by dose\",\n       x = \"Time\",\n       y = \"DV\") +\n  theme(legend.title = element_blank())\n\n\n\n\n\n\n\n\nRemove all entries where OCC=2\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ndrug_mag1 = drug_mag %&gt;%\n  filter(OCC==1)\n\nExclude observations with time = 0\n\ndrug_mag2 = drug_mag1 %&gt;%\n  filter(TIME!= 0)\n\nCompute the sum\n\nY= drug_mag2 %&gt;%\n  group_by(ID) %&gt;%\n  summarize(Y = sum(DV, na.rm = TRUE))\nprint(Y)\n\n# A tibble: 120 × 2\n      ID     Y\n   &lt;int&gt; &lt;dbl&gt;\n 1   793 2691.\n 2   794 2639.\n 3   795 2150.\n 4   796 1789.\n 5   797 3126.\n 6   798 2337.\n 7   799 3007.\n 8   800 2796.\n 9   801 3866.\n10   802 1762.\n# ℹ 110 more rows\n\n\nCreate a dataframe with time = 0\n\ndrug_mag3 = drug_mag1 %&gt;%\n  filter(TIME == 0)\n\nJoin the data\n\ndrug_mag_joined &lt;- left_join(drug_mag3, Y, by = \"ID\")\n\nConvert race and sex to factor variables, and retain necessary variables only.\n\ndrug_mag_final = drug_mag_joined %&gt;%\n  mutate(\n    RACE=factor(RACE),\n    SEX=factor(SEX)) %&gt;%\n  select(ID, Y, DOSE, AGE, SEX, RACE, WT, HT)\n\nCreate a summary table:\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(kableExtra)\n\nWarning: package 'kableExtra' was built under R version 4.4.2\n\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n# Summary stats for continuous variables\nsummary_stats &lt;- drug_mag_final %&gt;%\n  summarize(\n    Mean_Y = mean(Y, na.rm = TRUE),\n    SD_Y = sd(Y, na.rm = TRUE),\n    Mean_AGE = mean(AGE, na.rm = TRUE),\n    SD_AGE = sd(AGE, na.rm = TRUE),\n    Mean_WT = mean(WT, na.rm = TRUE),\n    SD_WT = sd(WT, na.rm = TRUE),\n    Mean_HT = mean(HT, na.rm = TRUE),\n    SD_HT = sd(HT, na.rm = TRUE),\n    Mean_Dose = mean(DOSE, na.rm = TRUE),\n    SD_Dose = sd(DOSE, na.rm = TRUE)\n  ) %&gt;%\n  pivot_longer(cols = everything(),\n               names_to = c(\".value\", \"Measure\"),\n               names_sep = \"_\") %&gt;%\n  mutate(\n    Mean = format(round(Mean, 2), nsmall = 2),\n    SD = format(round(SD, 2), nsmall = 2)\n  ) %&gt;%\n  select(Measure, Mean, SD)\n\n# Bigger blank row for separation\nblank_row &lt;- tibble(Measure = \" \", Mean = \" \", SD = \" \")\n\n# Subheading row for percentage-based variables\npercent_heading &lt;- tibble(Measure = \"Categorical Variables\", Mean = \" \", SD = \" \")\n\n# Percentage for SEX\nsex_summary &lt;- drug_mag_final %&gt;%\n  count(SEX) %&gt;%\n  mutate(Percent = round(n / sum(n) * 100, 1)) %&gt;%\n  summarize(\n    Measure = \"SEX\",\n    Mean = paste0(\"SEX = 1: \", Percent[SEX == 1], \"%\"),\n    SD = paste0(\"SEX = 2: \", Percent[SEX == 2], \"%\")\n  )\n\n# Percentage for RACE\nrace_summary &lt;- drug_mag_final %&gt;%\n  count(RACE) %&gt;%\n  mutate(Percent = round(n / sum(n) * 100, 1)) %&gt;%\n  summarize(\n    Measure = \"RACE\",\n    Mean = paste0(\"RACE = 1: \", Percent[RACE == 1], \"%\"),\n    SD = paste0(\"RACE = 2: \", Percent[RACE == 2], \"%\")\n  )\n\n# Combine all the tables\nfinal_summary &lt;- bind_rows(summary_stats, blank_row, blank_row, percent_heading, blank_row, sex_summary, race_summary)\n\n# Display the final table with clear sectioning and subheadings\nfinal_summary %&gt;%\n  kable(\"html\", col.names = c(\"Measure\", \"Mean\", \"SD\"),\n        caption = \"Summary Statistics and Percentages\") %&gt;%\n  add_header_above(c(\" \" = 1, \"Continuous Variables\" = 2)) %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\")) %&gt;%\n  row_spec(nrow(summary_stats) + 3, bold = TRUE, color = \"black\", hline_after = TRUE) %&gt;% # Style the percentage-based subheading\n  row_spec(nrow(summary_stats) + 1, hline_after = TRUE) # Visual break before percentages\n\n\nSummary Statistics and Percentages\n\n\n\n\n\n\n\n\n\nContinuous Variables\n\n\n\nMeasure\nMean\nSD\n\n\n\n\nY\n2445.41\n961.64\n\n\nAGE\n33.00\n8.98\n\n\nWT\n82.55\n12.52\n\n\nHT\n1.76\n0.09\n\n\nDose\n36.46\n11.86\n\n\n\n\n\n\n\n\n\n\n\n\nCategorical Variables\n\n\n\n\n\n\n\n\n\nSEX\nSEX = 1: 86.7%\nSEX = 2: 13.3%\n\n\nRACE\nRACE = 1: 61.7%\nRACE = 2: 30%\n\n\n\n\n\n\n\nWe see that the mean age is 33.26. The mean height and weight are 83.60 and 1.76 - thus the mean BMI is 26.98 (overweight).\nScatterplots:\n\nlibrary(ggplot2)\n\n# Scatterplot of Y vs. AGE\nggplot(drug_mag_final, aes(x = AGE, y = Y)) +\n  geom_point(color = 'blue') +\n  labs(title = \"Scatterplot of Y vs. AGE\", x = \"AGE\", y = \"Total Drug (Y)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# Scatterplot of Y vs. WT (weight)\nggplot(drug_mag_final, aes(x = WT, y = Y)) +\n  geom_point(color = 'red') +\n  labs(title = \"Scatterplot of Y vs. WT\", x = \"Weight (WT)\", y = \"Total Drug (Y)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# Scatterplot of Y vs. HT (height)\nggplot(drug_mag_final, aes(x = HT, y = Y)) +\n  geom_point(color = 'green') +\n  labs(title = \"Scatterplot of Y vs. HT\", x = \"Height (HT)\", y = \"Total Drug (Y)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAge and total drug do not seem to have any linear relationship. Similarly, no clear relationship is seem between total drug and weight or height.\nBoxplots:\n\n# Boxplot of Y vs. SEX\nggplot(drug_mag_final, aes(x = factor(SEX), y = Y)) +\n  geom_boxplot(fill = 'lightblue') +\n  labs(title = \"Boxplot of Y vs. SEX\", x = \"SEX\", y = \"Total Drug (Y)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# Boxplot of Y vs. RACE\nggplot(drug_mag_final, aes(x = factor(RACE), y = Y)) +\n  geom_boxplot(fill = 'lightgreen') +\n  labs(title = \"Boxplot of Y vs. RACE\", x = \"RACE\", y = \"Total Drug (Y)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nSex = 2 has a slightly lower mean total drug administered. The mean total drug by race seems to be the same.\nDistributions:\n\nlibrary(ggplot2)\nlibrary(patchwork) # To combine plots\n\n# Histogram for continuous variables\np1 &lt;- ggplot(drug_mag_final, aes(x = Y)) +\n  geom_histogram(fill = 'steelblue', color = 'black', bins = 30) +\n  labs(title = \"Distribution of Total Drug (Y)\", x = \"Total Drug (Y)\", y = \"Count\") +\n  theme_minimal()\n\np2 &lt;- ggplot(drug_mag_final, aes(x = AGE)) +\n  geom_histogram(fill = 'darkorange', color = 'black', bins = 30) +\n  labs(title = \"Distribution of Age\", x = \"Age\", y = \"Count\") +\n  theme_minimal()\n\np3 &lt;- ggplot(drug_mag_final, aes(x = WT)) +\n  geom_histogram(fill = 'forestgreen', color = 'black', bins = 30) +\n  labs(title = \"Distribution of Weight (WT)\", x = \"Weight\", y = \"Count\") +\n  theme_minimal()\n\np4 &lt;- ggplot(drug_mag_final, aes(x = HT)) +\n  geom_histogram(fill = 'purple', color = 'black', bins = 30) +\n  labs(title = \"Distribution of Height (HT)\", x = \"Height\", y = \"Count\") +\n  theme_minimal()\n\np5 &lt;- ggplot(drug_mag_final, aes(x = DOSE)) +\n  geom_histogram(fill = 'darkred', color = 'black', bins = 30) +\n  labs(title = \"Distribution of Dose\", x = \"Dose\", y = \"Count\") +\n  theme_minimal()\n\n# Bar plots for categorical variables\np6 &lt;- ggplot(drug_mag_final, aes(x = factor(SEX))) +\n  geom_bar(fill = 'skyblue', color = 'black') +\n  labs(title = \"Distribution of Sex\", x = \"Sex\", y = \"Count\") +\n  theme_minimal()\n\np7 &lt;- ggplot(drug_mag_final, aes(x = factor(RACE))) +\n  geom_bar(fill = 'pink', color = 'black') +\n  labs(title = \"Distribution of Race\", x = \"Race\", y = \"Count\") +\n  theme_minimal()\n\n# Combine the plots\n(p1 + p2) / (p3 + p4) / (p5 + p6) / p7\n\n\n\n\n\n\n\n\nThe distributions are as expected. Weight is normally distributed. Height is slightly skewed. Age seems to have a bimodal distribution.\nCorrelation plots:\n\nlibrary(GGally)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nlibrary(ggplot2)\n\n# Select only continuous variables for pair plots\ncontinuous_vars &lt;- drug_mag_final %&gt;%\n  select(Y, AGE, WT, HT, DOSE)\n\n# Pair plot with customized bin width\nggpairs(continuous_vars, \n        lower = list(continuous = wrap(\"points\", alpha = 0.5)),\n        upper = list(continuous = wrap(\"cor\", size = 4)),\n        diag = list(continuous = wrap(\"barDiag\", fill = \"steelblue\", binwidth = 5)),\n        title = \"Pair and Correlation Plot of Continuous Variables\")\n\n\n\n\n\n\n\n\nThe correlation between total drug and weight is significant (-0.210). The drug may have been dosed based on body weight. Other correlations are not relevant to the drug.\nModel fitting:\n\n#Dose\ndose_model = lm(Y~DOSE, data=drug_mag_final)\nsummary(dose_model)\n\n\nCall:\nlm(formula = Y ~ DOSE, data = drug_mag_final)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1284.91  -441.14   -97.22   325.84  2372.87 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  323.062    199.049   1.623    0.107    \nDOSE          58.213      5.194  11.208   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 672.1 on 118 degrees of freedom\nMultiple R-squared:  0.5156,    Adjusted R-squared:  0.5115 \nF-statistic: 125.6 on 1 and 118 DF,  p-value: &lt; 2.2e-16\n\n\nWe can see that dose is a significant predictor of Y. The R-squared is 0.5225, thus 52.25% of the variation in Y is explained by dose.\n\n#All predictors\nfull_model = lm(Y~ DOSE + HT + WT + AGE + as.factor(SEX) + as.factor(RACE), data=drug_mag_final)\nsummary(full_model)\n\n\nCall:\nlm(formula = Y ~ DOSE + HT + WT + AGE + as.factor(SEX) + as.factor(RACE), \n    data = drug_mag_final)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1480.86  -367.81   -79.95   266.15  2431.52 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       3386.863   1835.153   1.846 0.067623 .  \nDOSE                59.935      4.880  12.281  &lt; 2e-16 ***\nHT                -748.487   1103.979  -0.678 0.499188    \nWT                 -23.047      6.395  -3.604 0.000471 ***\nAGE                  3.155      7.825   0.403 0.687530    \nas.factor(SEX)2   -357.734    216.928  -1.649 0.101957    \nas.factor(RACE)2   155.034    128.627   1.205 0.230650    \nas.factor(RACE)7  -405.320    448.189  -0.904 0.367768    \nas.factor(RACE)88  -53.505    244.668  -0.219 0.827296    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 614.3 on 111 degrees of freedom\nMultiple R-squared:  0.6193,    Adjusted R-squared:  0.5919 \nF-statistic: 22.57 on 8 and 111 DF,  p-value: &lt; 2.2e-16\n\n\nWe can see that dose and weight are significant predictors of Y. The R-squared has increased to 0.6193, F-statistic = 22.57 and p-value &lt; 0.05, thus this model is a better fit than the previous model.\nCompare the root mean square error and R-squared:\n\n#Model 1\n# Get predictions for model 1\npredictions &lt;- predict(dose_model)\n\n# Calculate RMSE\nactuals &lt;- drug_mag_final$Y\nrmse &lt;- sqrt(mean((predictions - actuals)^2))\n\n# Calculate R-squared\nr_squared &lt;- summary(dose_model)$r.squared\n\n# Print results\ncat(\"RMSE:\", round(rmse, 2), \"\\n\")\n\nRMSE: 666.46 \n\ncat(\"R-squared:\", round(r_squared, 2), \"\\n\")\n\nR-squared: 0.52 \n\n#Model 2\n# Get predictions for model 2\npredictions &lt;- predict(full_model)\n\n# Calculate RMSE\nactuals &lt;- drug_mag_final$Y\nrmse &lt;- sqrt(mean((predictions - actuals)^2))\n\n# Calculate R-squared\nr_squared &lt;- summary(full_model)$r.squared\n\n# Print results\ncat(\"RMSE:\", round(rmse, 2), \"\\n\")\n\nRMSE: 590.85 \n\ncat(\"R-squared:\", round(r_squared, 2), \"\\n\")\n\nR-squared: 0.62 \n\n\nThe RMSE for model 1 is greater than model 2, which means model 2 is a better fit. Similarly, R-squared increased, thus model 2 explains 62% of the variation in Y.\nLogistic regression: Fitting a model to predict SEX using DOSE\n\nlogistic_dose_model = glm(SEX~DOSE, data=drug_mag_final, family=binomial)\nsummary(logistic_dose_model)\n\n\nCall:\nglm(formula = SEX ~ DOSE, family = binomial, data = drug_mag_final)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept) -0.76482    0.85395  -0.896    0.370\nDOSE        -0.03175    0.02432  -1.306    0.192\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 94.242  on 119  degrees of freedom\nResidual deviance: 92.431  on 118  degrees of freedom\nAIC: 96.431\n\nNumber of Fisher Scoring iterations: 5\n\n\nWe see that obviously, dose is not a significant predictor of sex.\nModel with all predictors\n\nfull_sex_model = glm(SEX~DOSE + Y + HT + WT + AGE + as.factor(RACE), data=drug_mag_final, family=binomial)\nsummary(full_sex_model)\n\n\nCall:\nglm(formula = SEX ~ DOSE + Y + HT + WT + AGE + as.factor(RACE), \n    family = binomial, data = drug_mag_final)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)        6.033e+01  1.804e+01   3.345 0.000824 ***\nDOSE              -3.076e-02  7.761e-02  -0.396 0.691893    \nY                 -1.040e-03  9.628e-04  -1.081 0.279840    \nHT                -3.320e+01  1.108e+01  -2.995 0.002744 ** \nWT                -6.283e-02  7.942e-02  -0.791 0.428908    \nAGE                8.340e-02  6.074e-02   1.373 0.169724    \nas.factor(RACE)2  -1.927e+00  1.375e+00  -1.402 0.160967    \nas.factor(RACE)7   1.176e-01  3.846e+00   0.031 0.975604    \nas.factor(RACE)88 -1.500e+00  2.195e+00  -0.683 0.494317    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 94.242  on 119  degrees of freedom\nResidual deviance: 32.077  on 111  degrees of freedom\nAIC: 50.077\n\nNumber of Fisher Scoring iterations: 8\n\n\nHere, height is a significant predictor of sex. This makes sense since women are on average shorter than men.\nAccuracy and ROC-AUC:\n\nlibrary(pROC)\n\nWarning: package 'pROC' was built under R version 4.4.2\n\n\nType 'citation(\"pROC\")' for a citation.\n\n\n\nAttaching package: 'pROC'\n\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\n# Model 1: Dose only\npredicted_probs1 &lt;- predict(logistic_dose_model, type = \"response\")\npredicted_sex1 &lt;- ifelse(predicted_probs1 &gt; 0.5, 2, 1)\n\naccuracy1 &lt;- mean(predicted_sex1 == drug_mag_final$SEX)\ncat(\"Model 1 - Accuracy:\", round(accuracy1 * 100, 2), \"%\\n\")\n\nModel 1 - Accuracy: 86.67 %\n\nroc_curve1 &lt;- roc(drug_mag_final$SEX, predicted_probs1)\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\nauc_value1 &lt;- auc(roc_curve1)\ncat(\"Model 1 - ROC-AUC:\", round(auc_value1, 3), \"\\n\")\n\nModel 1 - ROC-AUC: 0.592 \n\n# Model 2: Full model (dose + other predictors)\npredicted_probs2 &lt;- predict(full_sex_model, type = \"response\")\npredicted_sex2 &lt;- ifelse(predicted_probs2 &gt; 0.5, 2, 1)\n\naccuracy2 &lt;- mean(predicted_sex2 == drug_mag_final$SEX)\ncat(\"Model 2 - Accuracy:\", round(accuracy2 * 100, 2), \"%\\n\")\n\nModel 2 - Accuracy: 94.17 %\n\nroc_curve2 &lt;- roc(drug_mag_final$SEX, predicted_probs2)\n\nSetting levels: control = 1, case = 2\nSetting direction: controls &lt; cases\n\nauc_value2 &lt;- auc(roc_curve2)\ncat(\"Model 2 - ROC-AUC:\", round(auc_value2, 3), \"\\n\")\n\nModel 2 - ROC-AUC: 0.98 \n\n\nWe see that accuracy for Model 2 is greater than Model 1, thus model 2 is able to predict sex with greater accuracy (94.17% of the time).\nReceiver operating characteristic - area under the curve (ROC-AUC) tells us how well the model is able to distinguish between SEX = 1 and SEX = 2. For model 1, ROC-AUC = 0.592, so it is only slightly better at distinguishing compared to a random model. For model 2, ROC-AUC = 0.98, thus it is excellent at distinguishing between the sexes.\nExercise 10: Model Improvement\nRemove the variable race:\n\ndrug_mag_final$RACE &lt;- NULL\n\nWe now have a dataset with 120 observations and 6 variables.\nNow, we set a random seed for reproducibility\n\nrngseed = 1234\n\nNow, we split the data - 75% train and 25% test set:\n\n# Load the rsample package (part of tidymodels)\nlibrary(rsample)\n\nWarning: package 'rsample' was built under R version 4.4.3\n\n# Set the seed for reproducibility\nset.seed(rngseed)\n\n# Split the data into 75% train and 25% test\ndata_split &lt;- initial_split(drug_mag_final, prop = 3/4)\n\n# Create data frames for the two sets\ntrain_data &lt;- training(data_split)  # 75% training set\ntest_data  &lt;- testing(data_split)   # 25% test set\n\nNow, we fit two models to the training data:\n\nlibrary(tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.4.3\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n\n\n✔ broom        1.0.7     ✔ recipes      1.2.0\n✔ dials        1.4.0     ✔ tibble       3.2.1\n✔ infer        1.0.7     ✔ tune         1.3.0\n✔ modeldata    1.4.0     ✔ workflows    1.2.0\n✔ parsnip      1.3.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.4     ✔ yardstick    1.3.2\n\n\nWarning: package 'broom' was built under R version 4.4.3\n\n\nWarning: package 'dials' was built under R version 4.4.3\n\n\nWarning: package 'infer' was built under R version 4.4.2\n\n\nWarning: package 'modeldata' was built under R version 4.4.3\n\n\nWarning: package 'parsnip' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'tune' was built under R version 4.4.3\n\n\nWarning: package 'workflows' was built under R version 4.4.3\n\n\nWarning: package 'workflowsets' was built under R version 4.4.3\n\n\nWarning: package 'yardstick' was built under R version 4.4.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard()         masks scales::discard()\n✖ dplyr::filter()          masks stats::filter()\n✖ kableExtra::group_rows() masks dplyr::group_rows()\n✖ dplyr::lag()             masks stats::lag()\n✖ recipes::step()          masks stats::step()\n\n# Model 1: Only DOSE\ndose_only_model &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  set_mode(\"regression\") %&gt;%\n  fit(Y ~ DOSE, data = train_data)\n\ndose_only_predictions &lt;- predict(dose_only_model, new_data = train_data) %&gt;%\n  bind_cols(train_data)\n\ndose_only_rmse &lt;- dose_only_predictions %&gt;%\n  rmse(truth = Y, estimate = .pred)\n\n# Model 2: All predictors\nfull_predictors_model &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  set_mode(\"regression\") %&gt;%\n  fit(Y ~ DOSE + HT + WT + AGE + as.factor(SEX), data = train_data)\n\nfull_predictors_predictions &lt;- predict(full_predictors_model, new_data = train_data) %&gt;%\n  bind_cols(train_data)\n\nfull_predictors_rmse &lt;- full_predictors_predictions %&gt;%\n  rmse(truth = Y, estimate = .pred)\n\n# Null Model\nnull_model &lt;- null_model() %&gt;%\n  set_engine(\"parsnip\") %&gt;%\n  set_mode(\"regression\") %&gt;%\n  fit(Y ~ 1, data = train_data)\n\nnull_predictions &lt;- predict(null_model, new_data = train_data) %&gt;%\n  bind_cols(train_data)\n\nnull_rmse &lt;- null_predictions %&gt;%\n  rmse(truth = Y, estimate = .pred)\n\n# Print all RMSE results in the desired order\ncat(\"DOSE-only Model RMSE:\", dose_only_rmse$.estimate, \"\\n\")\n\nDOSE-only Model RMSE: 702.8078 \n\ncat(\"Full Predictors Model RMSE:\", full_predictors_rmse$.estimate, \"\\n\")\n\nFull Predictors Model RMSE: 627.4408 \n\ncat(\"Null Model RMSE:\", null_rmse$.estimate, \"\\n\")\n\nNull Model RMSE: 948.3526 \n\n\nWe see that the highest RMSE value is observed with the null model, followed by the dose-only model, followed by the model using all the predictors. Since the model with all the predictors has the lowest RMSE, this model provides the best overall fit.\nNow, we move on to the cross-validation part:\n\n# Set the random seed\nset.seed(rngseed)\n\n# Splitting the data into training and test sets\ndata_split &lt;- initial_split(drug_mag_final, prop = 0.75)\ntrain_data &lt;- training(data_split)\ntest_data  &lt;- testing(data_split)\n\nNow, we perform the 10-fold cross-validation\n\nlibrary(tidymodels)\n\n# Set the random seed for reproducibility\nset.seed(rngseed)\n\n# Create a 10-fold cross-validation object\ncv_folds &lt;- vfold_cv(train_data, v = 10)\n\n# Model 1: Dose as predictor\ndose_only_cv_model &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  set_mode(\"regression\")\n\n# Fit and evaluate Model 1 using 10-fold CV\ndose_only_cv_results &lt;- fit_resamples(\n  dose_only_cv_model,\n  Y ~ DOSE,\n  resamples = cv_folds,\n  metrics = metric_set(yardstick::rmse)  # Pass the metric function, not a string\n)\n\n# Extract the average RMSE across all folds\ndose_only_cv_rmse &lt;- dose_only_cv_results %&gt;%\n  collect_metrics() %&gt;%\n  filter(.metric == \"rmse\") %&gt;%\n  pull(mean)\n\ncat(\"DOSE-only Model Average RMSE (10-fold CV):\", dose_only_cv_rmse, \"\\n\")\n\nDOSE-only Model Average RMSE (10-fold CV): 690.5398 \n\n# Model 2: All predictors\n# Specify the linear model\nfull_predictors_cv_model &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  set_mode(\"regression\")\n\n# Fit and evaluate Model 2 using 10-fold CV\nfull_predictors_cv_results &lt;- fit_resamples(\n  full_predictors_cv_model,\n  Y ~ DOSE + HT + WT + AGE + as.factor(SEX),\n  resamples = cv_folds,\n  metrics = metric_set(yardstick::rmse)  # Wrap rmse in metric_set()\n)\n\n# Extract the average RMSE across all folds\nfull_predictors_cv_rmse &lt;- full_predictors_cv_results %&gt;%\n  collect_metrics() %&gt;%\n  filter(.metric == \"rmse\") %&gt;%\n  pull(mean)\n\ncat(\"Full Predictors Model Average RMSE (10-fold CV):\", full_predictors_cv_rmse, \"\\n\")\n\nFull Predictors Model Average RMSE (10-fold CV): 645.6909 \n\n\nThe RMSE for the dose-only model decreased from 702 to 690, while that for the model with all the predictors increased from 627 to 645. Thus, using cross-validation improved the fit of one model.\nNow, we compute standard error of the RMSE:\n\n# Extract RMSE for each fold for Model 1\ndose_only_cv_rmse_folds &lt;- dose_only_cv_results %&gt;%\n  collect_metrics(summarize = FALSE) %&gt;%\n  filter(.metric == \"rmse\")\n\n# Compute average RMSE and standard error for Model 1\ndose_only_cv_rmse &lt;- mean(dose_only_cv_rmse_folds$.estimate)\ndose_only_cv_rmse_se &lt;- sd(dose_only_cv_rmse_folds$.estimate) / sqrt(nrow(dose_only_cv_rmse_folds))\n\n# Extract RMSE for each fold for Model 2\nfull_predictors_cv_rmse_folds &lt;- full_predictors_cv_results %&gt;%\n  collect_metrics(summarize = FALSE) %&gt;%\n  filter(.metric == \"rmse\")\n\n# Compute average RMSE and standard error for Model 2\nfull_predictors_cv_rmse &lt;- mean(full_predictors_cv_rmse_folds$.estimate)\nfull_predictors_cv_rmse_se &lt;- sd(full_predictors_cv_rmse_folds$.estimate) / sqrt(nrow(full_predictors_cv_rmse_folds))\n\n# Print results\ncat(\"DOSE-only Model RMSE Standard Error:\", dose_only_cv_rmse_se, \"\\n\\n\")\n\nDOSE-only Model RMSE Standard Error: 67.49509 \n\ncat(\"Full Predictors Model RMSE Standard Error:\", full_predictors_cv_rmse_se, \"\\n\")\n\nFull Predictors Model RMSE Standard Error: 64.81927 \n\n\nWe can see that the RMSE standard error for the model with all the predictors is smaller, indicating that it is a more robust model compared to the dose-only model.\nNow, we run the code again using a different random seed:\n\nlibrary(tidymodels)  # Load tidymodels (includes rsample, parsnip, yardstick, etc.)\n\n# Set a new random seed for reproducibility\nset.seed(5678)  # Changed from rngseed = 1234 to 5678\n\n# Create a 10-fold cross-validation object\ncv_folds &lt;- vfold_cv(train_data, v = 10)\n\n# Define the models with new names\nmodel_dose_only &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  set_mode(\"regression\")\n\nmodel_full_predictors &lt;- linear_reg() %&gt;%\n  set_engine(\"lm\") %&gt;%\n  set_mode(\"regression\")\n\n# Fit and evaluate Model 1 (DOSE-only) using 10-fold CV\nresults_dose_only &lt;- fit_resamples(\n  model_dose_only,\n  Y ~ DOSE,\n  resamples = cv_folds,\n  metrics = metric_set(yardstick::rmse)  # Use RMSE as the metric\n)\n\n# Fit and evaluate Model 2 (Full Predictors) using 10-fold CV\nresults_full_predictors &lt;- fit_resamples(\n  model_full_predictors,\n  Y ~ DOSE + HT + WT + AGE + as.factor(SEX),\n  resamples = cv_folds,\n  metrics = metric_set(yardstick::rmse)  # Use RMSE as the metric\n)\n\n# Extract RMSE for each fold for Model 1 (DOSE-only)\nrmse_folds_dose_only &lt;- results_dose_only %&gt;%\n  collect_metrics(summarize = FALSE) %&gt;%\n  filter(.metric == \"rmse\")\n\n# Compute average RMSE and standard error for Model 1 (DOSE-only)\navg_rmse_dose_only &lt;- mean(rmse_folds_dose_only$.estimate)\nse_rmse_dose_only &lt;- sd(rmse_folds_dose_only$.estimate) / sqrt(nrow(rmse_folds_dose_only))\n\n# Extract RMSE for each fold for Model 2 (Full Predictors)\nrmse_folds_full_predictors &lt;- results_full_predictors %&gt;%\n  collect_metrics(summarize = FALSE) %&gt;%\n  filter(.metric == \"rmse\")\n\n# Compute average RMSE and standard error for Model 2 (Full Predictors)\navg_rmse_full_predictors &lt;- mean(rmse_folds_full_predictors$.estimate)\nse_rmse_full_predictors &lt;- sd(rmse_folds_full_predictors$.estimate) / sqrt(nrow(rmse_folds_full_predictors))\n\n# Print results\ncat(\"DOSE-only Model Average RMSE (10-fold CV):\", avg_rmse_dose_only, \"\\n\")\n\nDOSE-only Model Average RMSE (10-fold CV): 693.1899 \n\ncat(\"DOSE-only Model RMSE Standard Error:\", se_rmse_dose_only, \"\\n\\n\")\n\nDOSE-only Model RMSE Standard Error: 62.82685 \n\ncat(\"Full Predictors Model Average RMSE (10-fold CV):\", avg_rmse_full_predictors, \"\\n\")\n\nFull Predictors Model Average RMSE (10-fold CV): 649.3594 \n\ncat(\"Full Predictors Model RMSE Standard Error:\", se_rmse_full_predictors, \"\\n\")\n\nFull Predictors Model RMSE Standard Error: 54.36664 \n\n\nWe can see that the RMSE did not change significantly - for the dose model, it increased from 690 to 693, while for the second model it increased from 645 to 649. The standard errors decreased, model 2 is still a better fit than model 1.\n\nThis section added by DOREEN KIBUULE KALEMBE.\nThese are our three models 1. Model with no predictors. 2. Model with only DOSE as predictor. 3. Model with ALL predictors.\n\n# Fitting the models\nnull_model &lt;- lm(Y ~ 1, data = train_data) #model\ndose_only_model &lt;- lm(Y ~ DOSE, data = train_data) #model2\nfull_predictors_model &lt;- lm(Y ~ DOSE + AGE + SEX + WT + HT, data = train_data) #model3\n\n\n# Generating predictions for each model\ntrain_data$pred_null &lt;- predict(null_model, newdata = train_data)\ntrain_data$pred_model1 &lt;- predict(dose_only_model, newdata = train_data)\ntrain_data$pred_model2 &lt;- predict(full_predictors_model, newdata = train_data)\n\n\n# Creating a data frame with observed and predicted values for three models\nresults &lt;- data.frame(\n  Observed = train_data$Y,\n  Predicted_NULL = train_data$pred_null,\n  Predicted_DOSE = train_data$pred_model1,\n  Predicted_ALL = train_data$pred_model2)\n \n# printing the results\nhead(results) \n\n  Observed Predicted_NULL Predicted_DOSE Predicted_ALL\n1  3004.21       2509.171       3206.650      3303.028\n2  1346.62       2509.171       1871.052      1952.556\n3  2771.69       2509.171       2538.851      2744.878\n4  2027.60       2509.171       1871.052      2081.182\n5  2353.40       2509.171       3206.650      2894.205\n6   826.43       2509.171       1871.052      1264.763\n\n\nThe predicted values of the null, dose and all predictors are gotten.\nlets proceed and get some visualisations.\n\n#Reshape the data into pivot longer version for better ggplot plotting.\nresults_long &lt;- results %&gt;%\n  pivot_longer(\n    cols = starts_with(\"Predicted_\"),\n    names_to = \"Model\",\n    values_to = \"Predicted\"\n  )\n\nggplot(results_long, aes(x = Observed, y = Predicted, color = Model, shape = Model)) +\n  geom_point(size = 3, alpha = 0.8) +  \n  geom_abline(slope = 1, intercept = 0, linetype = \"solid\", color = \"blue\") +  # Fixed linetype\n  facet_wrap(~ Model, ncol = 3) +  \n  scale_x_continuous(limits = c(0, 5000)) +  \n  scale_y_continuous(limits = c(0, 5000)) +  \n  labs(\n    x = \"Observed Values\",\n    y = \"Predicted Values\",\n    title = \"Observed vs Predicted Values for Each Model\",\n    color = \"Model\",\n    shape = \"Model\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(size = 10, face = \"bold\")\n  )\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nFrom the above visualizations, we see that the model with all predictors shows a better fit to our data.\nNow lets plot residuals vs predicted to see whether we have any patterns in the data of model two.\n\n# adding predictions and residuals to the data\nresults &lt;- results %&gt;% mutate(Model2_residuals = Predicted_ALL - Observed)\n\n# creating the plot\nggplot(results, aes(x = Predicted_ALL, y = Model2_residuals)) +\n  geom_point(size = 2, alpha = 0.6, color = \"black\") +  # adding points for predicted vs residuals\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +  # Add horizontal line at 0\n  labs(\n    x = \"Predicted Values (Model 2)\",\n    y = \"Residuals (Predicted - Observed)\",\n    title = \"Predicted vs Residuals for Model 2\",\n  ) +\n  scale_y_continuous(limits = c(-max(abs(results$Model2_residuals)), max(abs(results$Model2_residuals)))) +  \n  theme_bw() +\n  theme(\n    plot.title = element_text(size = 10, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\nFrom the above plot, we notice that we have more negative values than positive values and this could be a problem but we have nothing to do about it.\n\n# Loading libraries\nlibrary(purrr)\n\n# set the random seed back to rngseed\nset.seed(1234)\n\n# Create 100 bootstrap samples from the training data\nbootstrap_samples &lt;- bootstraps(train_data, times = 100)\n\n# defining a function to fit Model 2 and make predictions\nfit_and_predict &lt;- function(split) {\n  # saving the bootstrap sample\n  bootstrap_data &lt;- analysis(split)\n  \n  # fitting Model 2 (Y ~ DOSE + AGE + SEX + WT + HT) to the bootstrap sample\n  model_2 &lt;- lm(Y ~ DOSE + AGE + SEX + WT + HT, data = bootstrap_data)\n  \n  # making predictions for the original training data\n  predict(model_2, newdata = train_data)\n}\n\n# using the function to each bootstrap sample and storing predictions\npredictions_list &lt;- map(bootstrap_samples$splits, fit_and_predict)\n\n# converting the list of predictions to a matrix (array)\npredictions_matrix &lt;- do.call(rbind, predictions_list)\n\n# calculate median and 95% confidence intervals for each data point\nprediction_summary &lt;- predictions_matrix %&gt;%\n  apply(2, quantile, probs = c(0.025, 0.5, 0.975)) %&gt;%\n  t() %&gt;%\n  as.data.frame() %&gt;%\n  setNames(c(\"Lower_CI_Median\", \"Pred_Median\", \"Upper_CI_Median\"))\n\nnow lets calculate the mean and CIs.\n\n# calculating mean and 95% confidence intervals for each data point\nmean_confint &lt;- predictions_matrix %&gt;%\n  apply(2, function(x) {\n    mean_val &lt;- mean(x)\n    se &lt;- sd(x) / sqrt(length(x))  # standard error of the mean\n    lower_ci &lt;- mean_val - 1.96 * se  # 95% CI lower bound\n    upper_ci &lt;- mean_val + 1.96 * se  # 95% CI upper bound\n    c(lower_ci, mean_val, upper_ci)\n  }) %&gt;%\n  t()  %&gt;%\n  as.data.frame()  %&gt;%\n  setNames(c(\"Lower_CI_for_Mean\", \"Pred_Mean\", \"Upper_CI_for_Mean\"))\n\n# merging median and mean summaries\nprediction_summary &lt;- cbind(prediction_summary, mean_confint)\n\n# adding the observed values from the training data\nprediction_summary$Observed &lt;- train_data$Y\n\n# printing the updated summary\nhead(prediction_summary)\n\n  Lower_CI_Median Pred_Median Upper_CI_Median Lower_CI_for_Mean Pred_Mean\n1        3083.086    3335.818        3586.619          3298.832  3327.341\n2        1645.772    1945.359        2232.636          1912.742  1944.126\n3        2556.181    2764.634        2974.479          2737.023  2757.878\n4        1722.745    2085.856        2435.738          2034.530  2073.550\n5        2645.607    2933.091        3197.893          2883.842  2914.454\n6        1001.184    1298.528        1547.160          1254.406  1283.881\n  Upper_CI_for_Mean Observed\n1          3355.850  3004.21\n2          1975.511  1346.62\n3          2778.734  2771.69\n4          2112.570  2027.60\n5          2945.066  2353.40\n6          1313.356   826.43\n\n\nwe have found the confidence interval for both the predicted median and mean.\nlets try to visualize it.\n\n# adding the original predictions to the summary table\nprediction_summary$Original_Predictions &lt;- predict(lm(Y ~ DOSE + AGE + SEX + WT + HT, data = train_data), newdata = train_data)\n\n# create the plot\nggplot(prediction_summary, aes(x = Observed)) +\n  geom_point(aes(y = Original_Predictions), color = \"darkgreen\", size = 3.5, alpha = 0.8, shape = 16) +  # Original predictions (point estimate)\n  geom_point(aes(y = Pred_Median), color = \"black\", size = 2, alpha = 0.7, shape = 10) +  # Median of bootstrap predictions (as points)\n  geom_errorbar(aes(ymin = Lower_CI_Median, ymax = Upper_CI_Median), color = \"orange\", width = 0.2) +  # 95% CI for median\n  geom_abline(slope = 1, intercept = 0, linetype = \"solid\", color = \"red\") +  # adding a 45-degree line\n  labs(\n    x = \"Observed Values\",\n    y = \"Predicted Values\",\n    title = \"Observed values vs Predicted Values with Bootstrap CIs\",\n  ) +\n  scale_x_continuous(limits = c(0, max(prediction_summary$Observed, prediction_summary$Upper_CI_Median))) +  # x-axis limits\n  scale_y_continuous(limits = c(0, max(prediction_summary$Observed, prediction_summary$Upper_CI_Median))) +  #y-axis limits\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\nHere, we see that Most predicted values increase as observed values increase.some points seem below the line at higher values which could mean that there was potential under estimation however,the predictions appear scattered around the red line, meaning the model does well overall and it is pretty accurate though there could be some variance."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "cdcdata-exercise",
    "section": "",
    "text": "This is the CDC dataset - Weekly Respiratory Virus Vaccination Data Children and Adults The dataset has 17 variables: Vaccine type, influenza season, Geographic level, Geographic Name, Demographic level, Demographic Name, Indicator Label, Indicator Category Label, Month and Week, Date of week ending, Weekly weighted estimate, Half-width of 90% CI, Half-width of 95% CI, Number of weighted respondents, and Number of unweighted respondents The dataset collects weekly data regarding respiratory virus vaccination coverage in the non-institutionalized US population. The data can be found at: https://data.cdc.gov/Vaccinations/Weekly-Respiratory-Virus-Vaccination-Data-Children/5c6r-xi2t/about_data\n\nlibrary(readr)\nlibrary(here)\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\nimmunization_cdcdata = read_csv(here(\"cdcdata-exercise\", \"Weekly_Respiratory_Virus_Vaccination_Data__Children_6_Months-17_Years_and_Adults_18_Years_and_Older__National_Immunization_Survey_20250203.csv\"), show_col_types = FALSE)\n\nLook at the data\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nglimpse(immunization_cdcdata)\n\nRows: 505\nColumns: 17\n$ vaccine                  &lt;chr&gt; \"COVID\", \"COVID\", \"COVID\", \"COVID\", \"COVID\", …\n$ influenza_season         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ geographic_level         &lt;chr&gt; \"National\", \"National\", \"National\", \"National…\n$ geographic_name          &lt;chr&gt; \"National\", \"National\", \"National\", \"National…\n$ demographic_level        &lt;chr&gt; \"Overall\", \"Overall\", \"Overall\", \"Overall\", \"…\n$ demographic_name         &lt;chr&gt; \"18+ years\", \"18+ years\", \"18+ years\", \"18+ y…\n$ indicator_label          &lt;chr&gt; \"4-level vaccination and intent\", \"4-level va…\n$ indicator_category_label &lt;chr&gt; \"Definitely or probably will not get a vaccin…\n$ month_week               &lt;chr&gt; \"December Week 1\", \"December Week 2\", \"Decemb…\n$ week_ending              &lt;dttm&gt; 2024-12-07, 2024-12-14, 2024-12-21, 2024-12-…\n$ nd_weekly_estimate       &lt;dbl&gt; 44.2757, 44.3654, 45.6612, 42.2254, 43.3316, …\n$ ci_half_width_90pct      &lt;dbl&gt; 1.8959, 1.9017, 1.8269, 2.5843, 2.1458, 1.886…\n$ ci_half_width_95pct      &lt;dbl&gt; 2.2590, 2.2659, 2.1768, 3.0791, 2.5567, 2.247…\n$ n_weighted               &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ n_unweighted             &lt;dbl&gt; 12045, 12288, 12401, 7625, 8080, 9768, 10569,…\n$ suppression_flag         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ data_source              &lt;chr&gt; \"NIS-ACM\", \"NIS-ACM\", \"NIS-ACM\", \"NIS-ACM\", \"…\n\nsummary(immunization_cdcdata)\n\n   vaccine          influenza_season   geographic_level   geographic_name   \n Length:505         Length:505         Length:505         Length:505        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n demographic_level  demographic_name   indicator_label   \n Length:505         Length:505         Length:505        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n indicator_category_label  month_week         week_ending                    \n Length:505               Length:505         Min.   :2024-08-24 00:00:00.00  \n Class :character         Class :character   1st Qu.:2024-10-12 00:00:00.00  \n Mode  :character         Mode  :character   Median :2024-11-16 00:00:00.00  \n                                             Mean   :2024-11-17 12:35:38.60  \n                                             3rd Qu.:2024-12-21 00:00:00.00  \n                                             Max.   :2025-01-25 00:00:00.00  \n                                                                             \n nd_weekly_estimate ci_half_width_90pct ci_half_width_95pct   n_weighted      \n Min.   : 1.925     Min.   :0.2190      Min.   :0.2610      Min.   :70326614  \n 1st Qu.:13.220     1st Qu.:0.7314      1st Qu.:0.8715      1st Qu.:70475989  \n Median :24.962     Median :1.4835      Median :1.7675      Median :70819197  \n Mean   :25.160     Mean   :1.7595      Mean   :2.0965      Mean   :70727335  \n 3rd Qu.:35.439     3rd Qu.:2.2774      3rd Qu.:2.7135      3rd Qu.:70883572  \n Max.   :54.257     Max.   :7.8075      Max.   :9.3026      Max.   :71005275  \n                                                            NA's   :420       \n  n_unweighted    suppression_flag data_source       \n Min.   :   777   Min.   :0        Length:505        \n 1st Qu.:  2856   1st Qu.:0        Class :character  \n Median : 11937   Median :0        Mode  :character  \n Mean   : 59714   Mean   :0                          \n 3rd Qu.: 92117   3rd Qu.:0                          \n Max.   :251252   Max.   :0                          \n                                                     \n\n\nWe can see that the variable influenza_season has no information, and all the rows say “NA”. Thus we can remove this variable. Similarly, we can see that this is national level data, and geographic_name and geographic_level are the same - “National”. As such, we can remove geographic_name from the dataset. The suppression_flag variable is the same - 0 - for all, and thus does not provide any additional useful information and can thus be removed. The number of weighted individuals have 420 NAs. The dataset has 505 variables, of which a sizable amount are NA. Removing all the NAs would leave us with a very small dataset. The unweighted individuals could be used in the analysis instead, however this may give inaccurate results. The weekly estimate estimate of the weighted proportion giving the response is available and can be used. The CDC website does provide a hard copy of the questionnaire used, however the sampling and weighting methods have not been elaborated on.\n\nimmunization_cdcdata_filtered = immunization_cdcdata |&gt;\n  select(-c(influenza_season, geographic_name, demographic_level, ci_half_width_90pct, ci_half_width_95pct, n_weighted, suppression_flag))\n\nLook at the filtered data\n\nglimpse(immunization_cdcdata_filtered)\n\nRows: 505\nColumns: 10\n$ vaccine                  &lt;chr&gt; \"COVID\", \"COVID\", \"COVID\", \"COVID\", \"COVID\", …\n$ geographic_level         &lt;chr&gt; \"National\", \"National\", \"National\", \"National…\n$ demographic_name         &lt;chr&gt; \"18+ years\", \"18+ years\", \"18+ years\", \"18+ y…\n$ indicator_label          &lt;chr&gt; \"4-level vaccination and intent\", \"4-level va…\n$ indicator_category_label &lt;chr&gt; \"Definitely or probably will not get a vaccin…\n$ month_week               &lt;chr&gt; \"December Week 1\", \"December Week 2\", \"Decemb…\n$ week_ending              &lt;dttm&gt; 2024-12-07, 2024-12-14, 2024-12-21, 2024-12-…\n$ nd_weekly_estimate       &lt;dbl&gt; 44.2757, 44.3654, 45.6612, 42.2254, 43.3316, …\n$ n_unweighted             &lt;dbl&gt; 12045, 12288, 12401, 7625, 8080, 9768, 10569,…\n$ data_source              &lt;chr&gt; \"NIS-ACM\", \"NIS-ACM\", \"NIS-ACM\", \"NIS-ACM\", \"…\n\nsummary(immunization_cdcdata_filtered)\n\n   vaccine          geographic_level   demographic_name   indicator_label   \n Length:505         Length:505         Length:505         Length:505        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n indicator_category_label  month_week         week_ending                    \n Length:505               Length:505         Min.   :2024-08-24 00:00:00.00  \n Class :character         Class :character   1st Qu.:2024-10-12 00:00:00.00  \n Mode  :character         Mode  :character   Median :2024-11-16 00:00:00.00  \n                                             Mean   :2024-11-17 12:35:38.60  \n                                             3rd Qu.:2024-12-21 00:00:00.00  \n                                             Max.   :2025-01-25 00:00:00.00  \n nd_weekly_estimate  n_unweighted    data_source       \n Min.   : 1.925     Min.   :   777   Length:505        \n 1st Qu.:13.220     1st Qu.:  2856   Class :character  \n Median :24.962     Median : 11937   Mode  :character  \n Mean   :25.160     Mean   : 59714                     \n 3rd Qu.:35.439     3rd Qu.: 92117                     \n Max.   :54.257     Max.   :251252                     \n\nView(immunization_cdcdata_filtered)\n\nWe have the following variables: vaccine, geographic_level, demographic_name, indicator_label, indicator_category_label, month_week, week_ending, nd_weekly_estimate, n_unweighted, and data_source.\nThe nd_weekly_estimate gives a weighted estimate of the proportion of respondents giving a particular response.\nThe month_week variable can be recorded as month variable, to get a more big-picture look at the data. We can also remove the 2025 data to focus on 2024 trends. Additionally, focus on indicator_label for those that are not up to date.\n\nimmunization_cdcdata_final &lt;- immunization_cdcdata_filtered |&gt;\n  mutate(month = str_extract(month_week, \"^[A-Za-z]+\")) |&gt; filter(!str_starts(week_ending, \"2025\")) |&gt;\n  filter(indicator_label == \"4-level vaccination and intent\") |&gt;\n  select(-c(indicator_label, month_week, week_ending))\nView(immunization_cdcdata_final)\n\nWe can create subsets of this dataset to look at trends. Let us create a subset for adults and COVID vaccine. Let us focus on those who are not up to date on the vaccine. This is the final dataset we focus on.\n\nadultcovid_cdcdata = immunization_cdcdata_final |&gt;\n  filter(vaccine==\"COVID\", demographic_name==\"18+ years\")\nView(adultcovid_cdcdata)\n\nLet us look at the data summary\n\nsummary(adultcovid_cdcdata)\n\n   vaccine          geographic_level   demographic_name  \n Length:68          Length:68          Length:68         \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n indicator_category_label nd_weekly_estimate  n_unweighted   \n Length:68                Min.   : 1.925     Min.   :  7625  \n Class :character         1st Qu.:14.382     1st Qu.: 10765  \n Mode  :character         Median :23.981     Median : 12055  \n                          Mean   :25.000     Mean   : 65120  \n                          3rd Qu.:33.608     3rd Qu.: 66428  \n                          Max.   :46.891     Max.   :227004  \n data_source           month          \n Length:68          Length:68         \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\n#Look at month distribution\ntable(adultcovid_cdcdata$month)\n\n\n December  November   October September \n       16        20        16        16 \n\n#Summary by month\n#September\nlibrary(dplyr)\n\n# Filter data for September and then summarize by indicator_category_label\nseptember_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"September\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\nseptember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine      42.9      1.15\n2 Definitely will get a vaccine                      22.8      1.32\n3 Probably will get a vaccine/unsure                 30.2      1.12\n4 Received a vaccination                              4.17     1.95\n\n\nThis gives us the percentage of individuals reporting the status for September. We do the same for October, November, and December.\n\n# Filter data for October and then summarize by indicator_category_label\noctober_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"October\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for October\noctober_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine       42.1     2.66\n2 Definitely will get a vaccine                       17.7     3.31\n3 Probably will get a vaccine/unsure                  29.1     1.63\n4 Received a vaccination                              11.0     2.08\n\n# Filter data for November and then summarize by indicator_category_label\nnovember_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"November\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\nnovember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine       44.1     2.04\n2 Definitely will get a vaccine                       12.2     1.92\n3 Probably will get a vaccine/unsure                  25.8     1.37\n4 Received a vaccination                              17.9     1.31\n\n# Filter data for December and then summarize by indicator_category_label\ndecember_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"December\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\ndecember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine      44.1     1.42 \n2 Definitely will get a vaccine                       9.32    0.406\n3 Probably will get a vaccine/unsure                 25.5     1.27 \n4 Received a vaccination                             21.1     0.494\n\n\nWe can also do the same to see the unweighted number.\n\n# Filter data for September and then summarize by indicator_category_label\nseptember_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"September\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(n_unweighted, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\nseptember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine     12162.     1.15\n2 Definitely will get a vaccine                     12162.     1.32\n3 Probably will get a vaccine/unsure                12162.     1.12\n4 Received a vaccination                           227004      1.95\n\n# Filter data for October and then summarize by indicator_category_label\noctober_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"October\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(n_unweighted, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for October\noctober_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine     11198.     2.66\n2 Definitely will get a vaccine                     11198.     3.31\n3 Probably will get a vaccine/unsure                11198.     1.63\n4 Received a vaccination                           227004      2.08\n\n# Filter data for November and then summarize by indicator_category_label\nnovember_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"November\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(n_unweighted, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for November\nnovember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine     10378.     2.04\n2 Definitely will get a vaccine                     10378.     1.92\n3 Probably will get a vaccine/unsure                10378.     1.37\n4 Received a vaccination                           227004      1.31\n\n# Filter data for December and then summarize by indicator_category_label\ndecember_summary &lt;- adultcovid_cdcdata |&gt;\n  filter(month == \"December\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(n_unweighted, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for December\ndecember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                      mean_value sd_value\n  &lt;chr&gt;                                              &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will not get a vaccine     11090.    1.42 \n2 Definitely will get a vaccine                     11090.    0.406\n3 Probably will get a vaccine/unsure                11090.    1.27 \n4 Received a vaccination                           227004     0.494\n\n\nLet us look at the adult vaccination trends by month.\n\nggplot(adultcovid_cdcdata, mapping=aes(x=month, y=nd_weekly_estimate, color=indicator_category_label)) + geom_point()\n\n\n\n\n\n\n\n\nWe can see that approximately 40% and above individuals report that they will definitely not get a vaccine. Those that report that they will definitely get the COVID vaccine decreases from around 20% in September to around 10% in December. Those that received a vaccination increased from less than 10% in September to over 20% in December.\n\nThis part was contributed by Doreen Kibuule Kalembe.\nI used the AI tools to prompt it to write code that can generate an R script to create a synthetic COVID-19 dataset with at least 100 observations. The dataset should include columns for vaccine type, geographical level, demographic name, indicator category labels, month, weighted estimates, and unweighted responses. Looking at the final dataset used for annalysis, I went with the 100 observations though the final data set had only 68 observations\n\nset.seed(123)  # For reproducibility\n\n# Generate 100 observations\ndata_size &lt;- 100\n\n# Define possible values for categorical variables\nvaccine &lt;- rep(\"COVID\", data_size)\ngeographical_level &lt;- rep(\"National\", data_size)\ndemographic_name &lt;- rep(\"18+ year olds\", data_size)\nindicator_category_label &lt;- sample(c(\"Definitely or probably will get a vaccine\", \n                                     \"Definitely will get a vaccine\", \n                                     \"Probably will get a vaccine\", \n                                     \"Received vaccination\"), \n                                   data_size, replace = TRUE)\nmonth &lt;- sample(c(\"August\", \"September\", \"October\", \"November\", \"December\"), \n                data_size, replace = TRUE)\n\n# Generate continuous variables\nnd_weekly_estimate &lt;- runif(data_size, min = 9, max = 50)  # Weighted estimate\nunweighted_response &lt;- sample(1000:300000, data_size, replace = TRUE)  # Unweighted response count\n\n# Create data frame\ncovid_data &lt;- data.frame(vaccine, geographical_level, demographic_name, \n                         indicator_category_label, month, \n                         nd_weekly_estimate, unweighted_response)\n\n# Display first few rows\nhead(covid_data)\n\n  vaccine geographical_level demographic_name      indicator_category_label\n1   COVID           National    18+ year olds   Probably will get a vaccine\n2   COVID           National    18+ year olds   Probably will get a vaccine\n3   COVID           National    18+ year olds   Probably will get a vaccine\n4   COVID           National    18+ year olds Definitely will get a vaccine\n5   COVID           National    18+ year olds   Probably will get a vaccine\n6   COVID           National    18+ year olds Definitely will get a vaccine\n     month nd_weekly_estimate unweighted_response\n1   August           40.10232              116945\n2 November           14.62135              217026\n3   August           25.25997              183562\n4   August           18.22440              278846\n5  October           11.37630              138694\n6 November           25.23160              169840\n\n# Save as CSV\nwrite.csv(covid_data, \"synthetic_covid_data.csv\", row.names = FALSE)\n\nlets try to look at the monthly distributions of those who received the vaccine.\n\nlibrary(readr)\nlibrary(here)\nsynthetic_covid_data&lt;-read_csv(\"synthetic_covid_data.csv\")\n\nRows: 100 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): vaccine, geographical_level, demographic_name, indicator_category_l...\ndbl (2): nd_weekly_estimate, unweighted_response\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nsummary(synthetic_covid_data)\n\n   vaccine          geographical_level demographic_name  \n Length:100         Length:100         Length:100        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n indicator_category_label    month           nd_weekly_estimate\n Length:100               Length:100         Min.   : 9.337    \n Class :character         Class :character   1st Qu.:18.227    \n Mode  :character         Mode  :character   Median :26.923    \n                                             Mean   :28.593    \n                                             3rd Qu.:39.969    \n                                             Max.   :49.976    \n unweighted_response\n Min.   :  2497     \n 1st Qu.:104954     \n Median :170088     \n Mean   :164745     \n 3rd Qu.:238216     \n Max.   :295245     \n\n#Look at month distribution\ntable(synthetic_covid_data$month)\n\n\n   August  December  November   October September \n       19        23        19        20        19 \n\n#Summary by month\n#September\nlibrary(dplyr)\n\n# Filter data for September and then summarize by indicator_category_label\nseptember_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"September\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\nseptember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine       25.0     NA  \n2 Definitely will get a vaccine                   25.8     11.6\n3 Probably will get a vaccine                     27.7     13.8\n4 Received vaccination                            33.2     12.7\n\n\nlets look at other months that is month of october november and december.\n\n# Filter data for October and then summarize by indicator_category_label\noctober_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"October\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for October\noctober_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine       39.6     9.19\n2 Definitely will get a vaccine                   23.2     6.11\n3 Probably will get a vaccine                     21.4    12.7 \n4 Received vaccination                            20.1     9.63\n\n# Filter data for November and then summarize by indicator_category_label\nnovember_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"November\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\nnovember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine       31.9    14.9 \n2 Definitely will get a vaccine                   31.9     8.80\n3 Probably will get a vaccine                     25.7    12.3 \n4 Received vaccination                            19.3    14.0 \n\n# Filter data for December and then summarize by indicator_category_label\ndecember_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"December\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(nd_weekly_estimate, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\ndecember_summary\n\n# A tibble: 3 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine       35.6     11.3\n2 Definitely will get a vaccine                   21.2     12.3\n3 Probably will get a vaccine                     25.2     10.6\n\n\nlets try applying the same summary statistics but to the un weighted.\n\n# Filter data for September and then summarize by indicator_category_label\nseptember_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"September\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(unweighted_response, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for September\nseptember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine    263174      NA  \n2 Definitely will get a vaccine                110637.     11.6\n3 Probably will get a vaccine                  160047.     13.8\n4 Received vaccination                         176362.     12.7\n\n# Filter data for October and then summarize by indicator_category_label\noctober_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"October\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(unweighted_response, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for October\noctober_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine    199279.     9.19\n2 Definitely will get a vaccine                222420.     6.11\n3 Probably will get a vaccine                  165864     12.7 \n4 Received vaccination                         137497      9.63\n\n# Filter data for November and then summarize by indicator_category_label\nnovember_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"November\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(unweighted_response, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for November\nnovember_summary\n\n# A tibble: 4 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine    158377.    14.9 \n2 Definitely will get a vaccine                 79895.     8.80\n3 Probably will get a vaccine                  195330.    12.3 \n4 Received vaccination                         124444     14.0 \n\n# Filter data for December and then summarize by indicator_category_label\ndecember_summary &lt;- synthetic_covid_data |&gt;\n  filter(month == \"December\") |&gt;\n  group_by(indicator_category_label) |&gt;\n  summarise(\n       mean_value = mean(unweighted_response, na.rm = TRUE),\n    sd_value = sd(nd_weekly_estimate, na.rm = TRUE),\n    .groups = 'drop'  # Removes the grouping structure after summarization\n  )\n\n# View the summary for December\ndecember_summary\n\n# A tibble: 3 × 3\n  indicator_category_label                  mean_value sd_value\n  &lt;chr&gt;                                          &lt;dbl&gt;    &lt;dbl&gt;\n1 Definitely or probably will get a vaccine    140595.     11.3\n2 Definitely will get a vaccine                142470      12.3\n3 Probably will get a vaccine                  188839.     10.6\n\n\nlooking at the outcomes, it looks like the synthetic data could work as a mirror of the original data set.\nlets make a visualisation of the data to see how the vaccination trends look like.\n\nggplot(synthetic_covid_data, mapping=aes(x=month, y=nd_weekly_estimate, color=indicator_category_label)) + geom_point()\n\n\n\n\n\n\n\n\nLooking at this synthetic data and the summary statistics I have made with it, it’s close to the original data. We still see that individuals who won’t get a vaccine have a higher percentage than others.\nI strongly believe this synthetic data can help us mirror what might happen for the real data."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "I am a 2nd year PhD student in the Pharmaceutical Health Services, Outcomes and Policy department. I completed my PharmD degree from India before joining the PhD program at UGA.\n\n\n\nCost-effectiveness analyses, Systematic reviews, Meta-analyses, Claims data analyses\n\n\n\nI have some experience with statistics - I have taken the following courses at UGA - STAT 6210, STAT 6220, STAT 6230, and ERSH 8320 I have used R before to run a meta-analysis, and for some regression analysis-based projects.\n\n\n\nI want to become more proficient at R.\n\n\n\nI have decided to read 52 books this year. I am halfway through the first one already.\n\n\n\nHeadshot\n\n\nI am hoping to work on a network meta-analysis soon and you can find an interesting video here"
  },
  {
    "objectID": "aboutme.html#education",
    "href": "aboutme.html#education",
    "title": "About me",
    "section": "",
    "text": "I am a 2nd year PhD student in the Pharmaceutical Health Services, Outcomes and Policy department. I completed my PharmD degree from India before joining the PhD program at UGA."
  },
  {
    "objectID": "aboutme.html#research-interests",
    "href": "aboutme.html#research-interests",
    "title": "About me",
    "section": "",
    "text": "Cost-effectiveness analyses, Systematic reviews, Meta-analyses, Claims data analyses"
  },
  {
    "objectID": "aboutme.html#statistics-and-coding-experience",
    "href": "aboutme.html#statistics-and-coding-experience",
    "title": "About me",
    "section": "",
    "text": "I have some experience with statistics - I have taken the following courses at UGA - STAT 6210, STAT 6220, STAT 6230, and ERSH 8320 I have used R before to run a meta-analysis, and for some regression analysis-based projects."
  },
  {
    "objectID": "aboutme.html#why-did-i-take-this-course",
    "href": "aboutme.html#why-did-i-take-this-course",
    "title": "About me",
    "section": "",
    "text": "I want to become more proficient at R."
  },
  {
    "objectID": "aboutme.html#fun-fact",
    "href": "aboutme.html#fun-fact",
    "title": "About me",
    "section": "",
    "text": "I have decided to read 52 books this year. I am halfway through the first one already.\n\n\n\nHeadshot\n\n\nI am hoping to work on a network meta-analysis soon and you can find an interesting video here"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Load the dslabs package\nlibrary(dslabs)\n\nWarning: package 'dslabs' was built under R version 4.4.2\n\nlibrary(skimr) #added skimr\n\nWarning: package 'skimr' was built under R version 4.4.2\nHelp file for the gapminder data\nhelp(gapminder)\n\nstarting httpd help server ... done\nLook at the data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\nSummarize the data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586\nDetermine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\"\nLoad the tidyverse library\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.4.2\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nCreate a dataset with only African countries\nafricadata = gapminder %&gt;% filter (continent==\"Africa\")\nLook at the data structure of africadata\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\nSummarize the data\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0\nCreate a new object - with infant mortality and life expectancy\nafrica_mortality_expectancy = africadata %&gt;% select(infant_mortality, life_expectancy)\nLook at the data structure and summarize the data\nstr(africa_mortality_expectancy)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(africa_mortality_expectancy)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226\nCreate a new object - with population and life expectancy\nafrica_population_expectancy = africadata %&gt;% select(population, life_expectancy)\nLook at the data structure and summarize the data\nstr(africa_population_expectancy)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(africa_population_expectancy)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51\nPlot for life expectancy as a function of infant mortality\nggplot(data=africa_mortality_expectancy, mapping=aes(x=infant_mortality, y=life_expectancy)) + geom_point()\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\nPlot for life expectancy as a function of population\nggplot(data=africa_population_expectancy, mapping=aes(x=population, y=life_expectancy)) + geom_point() + scale_x_log10() \n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\nLook at the africadata\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0\nWe have data for the same country multiple times (over multiple years) - the data spans time from 1960 to 2016, so the population grows over time. Since we have multiple years of data for multiple countries, it is difficult to identify patterns. We can take a look at a single year and try to see if the plot looks different.\nFirst, find missing values in africadata by year.\nmissing_infant_mortality = africadata %&gt;% \n  group_by(year) %&gt;%\n  summarize(missing_values = sum(is.na(infant_mortality)))\nprint(missing_infant_mortality)\n\n# A tibble: 57 × 2\n    year missing_values\n   &lt;int&gt;          &lt;int&gt;\n 1  1960             10\n 2  1961             17\n 3  1962             16\n 4  1963             16\n 5  1964             15\n 6  1965             14\n 7  1966             13\n 8  1967             11\n 9  1968             11\n10  1969              7\n# ℹ 47 more rows\nWe can see that there are missing values upto 1980, and then in 2016. Create an object with only data from 2000.\nafrica2000data = africadata %&gt;% filter(year==2000)\nLook at the data structure and summarize the data\nstr(africa2000data)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africa2000data)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0\nPlot for life expectancy as a function of infant mortality\nggplot(data=africa2000data, mapping=aes(x=infant_mortality, y=life_expectancy)) +geom_point()\nPlot for life expectancy as a function of population\nggplot(data=africa2000data, mapping=aes(x=population, y=life_expectancy)) + geom_point() + scale_x_log10()\nFitting a model to predict life expectancy using infant mortality\nlm_mortality = lm(life_expectancy ~ infant_mortality, data=africa2000data)\nsummary(lm_mortality)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africa2000data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\nFitting a model to predict life expectancy using population\nlm_population = lm(life_expectancy ~ population, data=africa2000data)\nsummary(lm_population)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africa2000data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\nWe can see that for the first model (using infant mortality), the p-value for infant mortality is less than 0.05, thus we can conclude that infant mortality is a useful predictor of life expectancy. The R-squared is 0.005176. Thus, while infant mortality is a useful predictor, this model is not able to explain a large potion of the variability in the life expectancy, and other variables should be considered.\nFor the second model (using population), the p-value for population is greater than 0.05, thus we can conclude that population is not a useful predictor of life expectancy.\nhelp(movielens)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#discriptive-statistics",
    "href": "coding-exercise/coding-exercise.html#discriptive-statistics",
    "title": "R Coding Exercise",
    "section": "1.1 Discriptive statistics",
    "text": "1.1 Discriptive statistics\nWe will use the movielens dataset from the dslab. The discriptive stat for the datasets will be discussed in this section.\n\nhelp(\"movielens\") #looking a the help file for movielens data\nstr(movielens) # getting an overview of the data structire\n\n'data.frame':   100004 obs. of  7 variables:\n $ movieId  : int  31 1029 1061 1129 1172 1263 1287 1293 1339 1343 ...\n $ title    : chr  \"Dangerous Minds\" \"Dumbo\" \"Sleepers\" \"Escape from New York\" ...\n $ year     : int  1995 1941 1996 1981 1989 1978 1959 1982 1992 1991 ...\n $ genres   : Factor w/ 901 levels \"(no genres listed)\",..: 762 510 899 120 762 836 81 762 844 899 ...\n $ userId   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ rating   : num  2.5 3 3 2 4 2 2 2 3.5 2 ...\n $ timestamp: int  1260759144 1260759179 1260759182 1260759185 1260759205 1260759151 1260759187 1260759148 1260759125 1260759131 ...\n\nsummary(movielens) # getting a summary of the movielens dataset\n\n    movieId          title                year     \n Min.   :     1   Length:100004      Min.   :1902  \n 1st Qu.:  1028   Class :character   1st Qu.:1987  \n Median :  2406   Mode  :character   Median :1995  \n Mean   : 12549                      Mean   :1992  \n 3rd Qu.:  5418                      3rd Qu.:2001  \n Max.   :163949                      Max.   :2016  \n                                     NA's   :7     \n                  genres          userId        rating        timestamp        \n Drama               : 7757   Min.   :  1   Min.   :0.500   Min.   :7.897e+08  \n Comedy              : 6748   1st Qu.:182   1st Qu.:3.000   1st Qu.:9.658e+08  \n Comedy|Romance      : 3973   Median :367   Median :4.000   Median :1.110e+09  \n Drama|Romance       : 3462   Mean   :347   Mean   :3.544   Mean   :1.130e+09  \n Comedy|Drama        : 3272   3rd Qu.:520   3rd Qu.:4.000   3rd Qu.:1.296e+09  \n Comedy|Drama|Romance: 3204   Max.   :671   Max.   :5.000   Max.   :1.477e+09  \n (Other)             :71588                                                    \n\nclass(movielens) # obtaining the type of object movielens is\n\n[1] \"data.frame\"\n\n\nWe will look into the variable year to find a year that will have high number of observation so that we can use it for our analysis.\n\ntable(movielens$year)  # creating a table for variable year\n\n\n1902 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 \n   6    2    1    2    2    1   15   12   28    3   10   40   20   38   21   18 \n1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 \n  31   98   44   74   75   73   65  125  100  288  317  254  221   42  162   75 \n1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 \n 193   87  119   99  236  243  152  218  346  290  170  316  246  368  304  296 \n1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 \n 368  352  429  249  226  434  473  282  295  641  449  525  540  712  471  674 \n1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 \n 602  885 1123  970 1240 1014 1581 1427 1769 1646 1689 2198 2105 1914 2301 4214 \n1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 \n5861 6635 5109 4060 4019 5034 4054 3442 3090 2508 2879 1852 1786 1606 1544 1375 \n2010 2011 2012 2013 2014 2015 2016 \n1238  926  939  839  798  535  124 \n\n\nI will pick year 1995 as it has one of the highest number of movies."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#data-summary-for-the-1995-dataset",
    "href": "coding-exercise/coding-exercise.html#data-summary-for-the-1995-dataset",
    "title": "R Coding Exercise",
    "section": "1.2 Data Summary for the 1995 dataset",
    "text": "1.2 Data Summary for the 1995 dataset\n\nyear1995 &lt;- movielens %&gt;% filter(year ==1995) #filtering year-2000 to make a new dataset\nstr(year1995) # getting an overview of the data structire of 1995 dataset\n\n'data.frame':   6635 obs. of  7 variables:\n $ movieId  : int  31 10 17 39 47 50 52 62 110 144 ...\n $ title    : chr  \"Dangerous Minds\" \"GoldenEye\" \"Sense and Sensibility\" \"Clueless\" ...\n $ year     : int  1995 1995 1995 1995 1995 1995 1995 1995 1995 1995 ...\n $ genres   : Factor w/ 901 levels \"(no genres listed)\",..: 762 124 820 687 888 743 646 762 271 596 ...\n $ userId   : int  1 2 2 2 2 2 2 2 2 2 ...\n $ rating   : num  2.5 4 5 5 4 4 3 3 4 3 ...\n $ timestamp: int  1260759144 835355493 835355681 835355604 835355552 835355586 835356031 835355749 835355532 835356016 ...\n\nsummary(year1995) # geting a summary of the dataset \n\n    movieId            title                year     \n Min.   :     1.0   Length:6635        Min.   :1995  \n 1st Qu.:    32.0   Class :character   1st Qu.:1995  \n Median :   110.0   Mode  :character   Median :1995  \n Mean   :   268.8                      Mean   :1995  \n 3rd Qu.:   186.0                      3rd Qu.:1995  \n Max.   :136592.0                      Max.   :1995  \n                                                     \n                                         genres         userId     \n Comedy|Romance                             : 510   Min.   :  1.0  \n Comedy                                     : 468   1st Qu.:165.0  \n Drama|Romance                              : 395   Median :363.0  \n Action|Crime|Thriller                      : 370   Mean   :346.4  \n Drama                                      : 334   3rd Qu.:520.0  \n Adventure|Animation|Children|Comedy|Fantasy: 247   Max.   :671.0  \n (Other)                                    :4311                  \n     rating        timestamp        \n Min.   :0.500   Min.   :7.897e+08  \n 1st Qu.:3.000   1st Qu.:8.476e+08  \n Median :3.500   Median :9.575e+08  \n Mean   :3.472   Mean   :1.010e+09  \n 3rd Qu.:4.000   3rd Qu.:1.116e+09  \n Max.   :5.000   Max.   :1.476e+09"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#comparing-new-dataset-with-the-overall-dataset",
    "href": "coding-exercise/coding-exercise.html#comparing-new-dataset-with-the-overall-dataset",
    "title": "R Coding Exercise",
    "section": "1.3 Comparing new dataset with the overall dataset",
    "text": "1.3 Comparing new dataset with the overall dataset\nThe below histogram shows the distribution of the rating variable in the entire dataset\n\nhist(movielens$rating, # this gives a histogram for rating\n     main = \"Histogram of Ratings\", # setting the title\n     xlab = \"Rating\",  #setting x-axis\n     col = \"orange\",  # setting color\n     breaks = 10) # setting the bars to 5 using 10 ratings\n\n\n\n\n\n\n\n\nThe below histogram shows the distribution of rating variable within the year 1995.\n\nhist(year1995$rating, # this gives a histogram for rating\n     main = \"Histogram of Ratings\", #setting the title\n     xlab = \"Rating\",  #setting x-axis\n     col = \"orange\", #setting the color\n     breaks = 10) # setting the bars to 10 and using 10 ratings"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#frequency-distrbution-of-rating-in-1995-dataset.",
    "href": "coding-exercise/coding-exercise.html#frequency-distrbution-of-rating-in-1995-dataset.",
    "title": "R Coding Exercise",
    "section": "1.4 frequency distrbution of Rating in 1995 dataset.",
    "text": "1.4 frequency distrbution of Rating in 1995 dataset.\n\n# Counting the occurrences of each rating\nrating_counts &lt;- table(year1995$rating) #creating a table based on count\n\n# Displaying the table\nprint(rating_counts)\n\n\n 0.5    1  1.5    2  2.5    3  3.5    4  4.5    5 \n  53  246   93  555  210 1866  403 1922  282 1005"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#boxplot-of-selected-genres-and-rating-year-1995",
    "href": "coding-exercise/coding-exercise.html#boxplot-of-selected-genres-and-rating-year-1995",
    "title": "R Coding Exercise",
    "section": "1.5 Boxplot of selected genres and Rating ( year 1995)",
    "text": "1.5 Boxplot of selected genres and Rating ( year 1995)\n\n# Filtering the data to include only Drama, Comedy, and Action\nfiltered_data &lt;- subset(year1995, genres %in% c(\"Drama\", \"Comedy\", \"Action\"))\nggplot(filtered_data, aes(x = genres, y = rating)) + #setting the axis\n  geom_boxplot() +\n  labs(title = \"Ratings across different genres\",\n       x = \"Genres\", #naming axis\n       y = \"Rating\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) #costomizing labels"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#statistical-test-for-difference-in-ratings-among-genres",
    "href": "coding-exercise/coding-exercise.html#statistical-test-for-difference-in-ratings-among-genres",
    "title": "R Coding Exercise",
    "section": "1.6 Statistical test for difference in ratings among genres",
    "text": "1.6 Statistical test for difference in ratings among genres\nWe will perform few test to analyse if there is a significant difference in ovies ratings among various ganres.\n\n1.6.1 T-test\nWe will perform a T-test to analyze if action and comedy genres have a statistically different ratings.\n\n# Filtering the rating data for Action and Comedy genres\naction_ratings &lt;- year1995$rating[year1995$genres == \"Action\"]\ncomedy_ratings &lt;- year1995$rating[year1995$genres == \"Comedy\"]\n\n# Perform a t-test, H0: action rating = comedy rating, Ha: action &gt; comedy\nt_test_result &lt;- t.test(action_ratings, comedy_ratings, alternative = \"greater\") #testing the hypothesis that mean rating for the \"Action\" genre is greater than that for the \"Comedy\" genre.\n\n# Display the results\nprint(t_test_result)\n\n\n    Welch Two Sample t-test\n\ndata:  action_ratings and comedy_ratings\nt = -1.0358, df = 74.916, p-value = 0.8482\nalternative hypothesis: true difference in means is greater than 0\n95 percent confidence interval:\n -0.3924665        Inf\nsample estimates:\nmean of x mean of y \n 2.983051  3.133547 \n\n\nSince the p-value is greater than 0.05, we fail to reject the null. The rating between the two genres are not statistically significant.\n\n\n1.6.2 Linear Regression\n\n# Running the simple linear regression with ratings predicted using genres\nmodel &lt;- lm(rating ~ genres, data = filtered_data)\n\n# View the summary of the model\nsummary(model)\n\n\nCall:\nlm(formula = rating ~ genres, data = filtered_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.9057 -0.4057 -0.1336  0.8665  2.0170 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    2.9831     0.1394  21.405  &lt; 2e-16 ***\ngenresComedy   0.1505     0.1479   1.018  0.30913    \ngenresDrama    0.4226     0.1512   2.796  0.00529 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.07 on 858 degrees of freedom\nMultiple R-squared:  0.01823,   Adjusted R-squared:  0.01595 \nF-statistic: 7.968 on 2 and 858 DF,  p-value: 0.0003727\n\n\nResults show that the Drama genre has a significantly higher rating than the base( Action) genre."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Pooja Gokhale Data Analysis Website",
    "section": "",
    "text": "HI!\n\nMy name is Pooja Gokhale. I am a 2nd year PhD student in the Pharmaceutical\n\n\nHealth Services, Outcomes and Policy department.\nWelcome to my website and data analysis portfolio."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.4.2\n\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Race                  0             1   5   8     0        5          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable    n_missing complete_rate  mean    sd  p0 p25 p50 p75 p100\n1 Height                   0             1 166.  16.0  133 156 166 178  183\n2 Weight                   0             1  70.1 21.2   45  55  70  80  110\n3 Numberofsiblings         0             1   2    1.22   0   1   2   3    4\n  hist \n1 ▂▁▃▃▇\n2 ▇▂▃▂▂\n3 ▂▅▇▅▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.4.2\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.4.2\n\n\nhere() starts at C:/Users/kkdor/Desktop/GitHub_Work/PoojaGokhale-MADA-Portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name`    `Variable Definition`                      `Allowed Values`\n  &lt;chr&gt;              &lt;chr&gt;                                      &lt;chr&gt;           \n1 Height             height in centimeters                      numeric value &gt;…\n2 Weight             weight in kilograms                        numeric value &gt;…\n3 Gender             identified gender (male/female/other)      M/F/O/NA        \n4 Number of siblings Integer number for number of siblings      numeric value &gt;…\n5 Race               Self-identification of race: White and Bl… White/Black/His…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height               &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", …\n$ Weight               &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45…\n$ Gender               &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\"…\n$ `Number of siblings` &lt;dbl&gt; 2, 3, 4, 1, 2, 0, 2, 3, 1, 3, 3, 1, 2, 4\n$ Race                 &lt;chr&gt; \"White\", \"Black\", \"Hispanic\", \"Asian\", \"Asian\", \"…\n\nsummary(rawdata)\n\n    Height              Weight          Gender          Number of siblings\n Length:14          Min.   :  45.0   Length:14          Min.   :0.000     \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:1.250     \n Mode  :character   Median :  70.0   Mode  :character   Median :2.000     \n                    Mean   : 602.7                      Mean   :2.214     \n                    3rd Qu.:  90.0                      3rd Qu.:3.000     \n                    Max.   :7000.0                      Max.   :4.000     \n                    NA's   :1                                             \n     Race          \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender `Number of siblings` Race    \n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;   \n1 180        80 M                         2 White   \n2 175        70 O                         3 Black   \n3 sixty      60 F                         4 Hispanic\n4 178        76 F                         1 Asian   \n5 192        90 NA                        2 Asian   \n6 6          55 F                         0 Other   \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.00\n70\n90\n7000\n▇▁▁▁▁\n\n\nNumber of siblings\n0\n1.00\n2.21\n1.19\n0\n1.25\n2\n3\n4\n▂▆▇▇▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nNumber of siblings\n0\n1.00\n2.08\n1.12\n0\n1.00\n2\n3\n4\n▂▆▇▇▂\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nNumber of siblings\n0\n1.00\n2.08\n1.12\n0\n1.00\n2\n3\n4\n▂▆▇▇▂\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nNumber of siblings\n0\n1\n1.91\n1.14\n0\n1.0\n2\n2.5\n4\n▂▆▇▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nNumber of siblings\n0\n1\n1.91\n1.14\n0\n1.0\n2\n2.5\n4\n▂▆▇▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nRace\n0\n1\n5\n8\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nNumber of siblings\n0\n1\n2.00\n1.22\n0\n1\n2\n3\n4\n▂▅▇▅▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Pooja Gokhale Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  }
]